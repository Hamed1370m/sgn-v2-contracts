{
  "address": "0x7d43AABC515C356145049227CeE54B608342c0ad",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_msgBus",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "returnData",
          "type": "bytes"
        }
      ],
      "name": "ExtCallErr",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeeClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageBus",
          "type": "address"
        }
      ],
      "name": "MessageBusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "srcChid",
          "type": "uint64"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstNft",
          "type": "address"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "receiver",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dstNft",
          "type": "bytes"
        }
      ],
      "name": "Sent2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstNftBridge",
          "type": "address"
        }
      ],
      "name": "SetDestBridge",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dstNftBridge",
          "type": "bytes"
        }
      ],
      "name": "SetDestBridge2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstNft",
          "type": "address"
        }
      ],
      "name": "SetDestNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "dstNft",
          "type": "bytes"
        }
      ],
      "name": "SetDestNFT2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isOrig",
          "type": "bool"
        }
      ],
      "name": "SetOrigNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "chid",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "SetTxFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "delOrigNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destBridge2",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destNFTAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destNFTAddr2",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "destTxFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "sender",
          "type": "bytes"
        },
        {
          "internalType": "uint64",
          "name": "srcChid",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "executeMessage",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "srcChid",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "executeMessage",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_srcChainId",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessageWithTransfer",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_srcChainId",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessageWithTransferFallback",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "executeMessageWithTransferRefund",
      "outputs": [
        {
          "internalType": "enum IMessageReceiverApp.ExecutionStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_msgBus",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageBus",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "origNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_receiver",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_receiver",
          "type": "bytes"
        }
      ],
      "name": "sendTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "sendTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "dstNftBridge",
          "type": "address"
        }
      ],
      "name": "setDestBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "dstNftBridge",
          "type": "bytes"
        }
      ],
      "name": "setDestBridge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64[]",
          "name": "dstChid",
          "type": "uint64[]"
        },
        {
          "internalType": "address[]",
          "name": "dstNftBridge",
          "type": "address[]"
        }
      ],
      "name": "setDestBridges",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "dstNft",
          "type": "bytes"
        }
      ],
      "name": "setDestNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "dstNft",
          "type": "address"
        }
      ],
      "name": "setDestNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "srcNft",
          "type": "address"
        },
        {
          "internalType": "uint64[]",
          "name": "dstChid",
          "type": "uint64[]"
        },
        {
          "internalType": "address[]",
          "name": "dstNft",
          "type": "address[]"
        }
      ],
      "name": "setDestNFTs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageBus",
          "type": "address"
        }
      ],
      "name": "setMessageBus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "setOrigNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "chid",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setTxFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_dstChid",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2e777258e4b9782ed8b9dad2d28c8ba2661c8ebcb70af08885a3dcf7ad2983b3",
  "receipt": {
    "to": null,
    "from": "0x58b529F9084D7eAA598EB3477Fe36064C5B7bbC1",
    "contractAddress": "0x7d43AABC515C356145049227CeE54B608342c0ad",
    "transactionIndex": 10,
    "gasUsed": "3433491",
    "logsBloom": "0x
    "blockHash": "0x0256c716c1c7d0eb5de84515549ab9ecc2beae91a84baf180eb7ceae58c73694",
    "transactionHash": "0x2e777258e4b9782ed8b9dad2d28c8ba2661c8ebcb70af08885a3dcf7ad2983b3",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 163460,
        "transactionHash": "0x2e777258e4b9782ed8b9dad2d28c8ba2661c8ebcb70af08885a3dcf7ad2983b3",
        "address": "0x7d43AABC515C356145049227CeE54B608342c0ad",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000058b529f9084d7eaa598eb3477fe36064c5b7bbc1"
        ],
        "data": "0x",
        "logIndex": 31,
        "blockHash": "0x0256c716c1c7d0eb5de84515549ab9ecc2beae91a84baf180eb7ceae58c73694"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 163460,
        "transactionHash": "0x2e777258e4b9782ed8b9dad2d28c8ba2661c8ebcb70af08885a3dcf7ad2983b3",
        "address": "0x7d43AABC515C356145049227CeE54B608342c0ad",
        "topics": [
          "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        ],
        "data": "0x00000000000000000000000058b529f9084d7eaa598eb3477fe36064c5b7bbc1",
        "logIndex": 32,
        "blockHash": "0x0256c716c1c7d0eb5de84515549ab9ecc2beae91a84baf180eb7ceae58c73694"
      }
    ],
    "blockNumber": 163460,
    "cumulativeGasUsed": "5428304",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf5C6825015280CdfD0b56903F9F8B5A2233476F5"
  ],
  "numDeployments": 1,
  "solcInputHash": "30279ec0d02d17c9395d0ecd4506fabc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_msgBus\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"ExtCallErr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageBus\",\"type\":\"address\"}],\"name\":\"MessageBusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"srcChid\",\"type\":\"uint64\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstNft\",\"type\":\"address\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dstNft\",\"type\":\"bytes\"}],\"name\":\"Sent2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstNftBridge\",\"type\":\"address\"}],\"name\":\"SetDestBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dstNftBridge\",\"type\":\"bytes\"}],\"name\":\"SetDestBridge2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstNft\",\"type\":\"address\"}],\"name\":\"SetDestNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dstNft\",\"type\":\"bytes\"}],\"name\":\"SetDestNFT2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isOrig\",\"type\":\"bool\"}],\"name\":\"SetOrigNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"chid\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetTxFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"delOrigNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destBridge2\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destNFTAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destNFTAddr2\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"destTxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"srcChid\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executeMessage\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"srcChid\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executeMessage\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessageWithTransfer\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessageWithTransferFallback\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"executeMessageWithTransferRefund\",\"outputs\":[{\"internalType\":\"enum IMessageReceiverApp.ExecutionStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_msgBus\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageBus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"origNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_receiver\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_receiver\",\"type\":\"bytes\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstNftBridge\",\"type\":\"address\"}],\"name\":\"setDestBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"dstNftBridge\",\"type\":\"bytes\"}],\"name\":\"setDestBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"dstChid\",\"type\":\"uint64[]\"},{\"internalType\":\"address[]\",\"name\":\"dstNftBridge\",\"type\":\"address[]\"}],\"name\":\"setDestBridges\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"dstNft\",\"type\":\"bytes\"}],\"name\":\"setDestNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"dstNft\",\"type\":\"address\"}],\"name\":\"setDestNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"srcNft\",\"type\":\"address\"},{\"internalType\":\"uint64[]\",\"name\":\"dstChid\",\"type\":\"uint64[]\"},{\"internalType\":\"address[]\",\"name\":\"dstNft\",\"type\":\"address[]\"}],\"name\":\"setDestNFTs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageBus\",\"type\":\"address\"}],\"name\":\"setMessageBus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setOrigNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"chid\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setTxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_dstChid\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)\":{\"params\":{\"_amount\":\"The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.\",\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"Arbitrary message bytes originated from and encoded by the source app contract\",\"_sender\":\"The address of the source app contract\",\"_srcChainId\":\"The source chain ID where the transfer is originated from\",\"_token\":\"The address of the token that comes out of the bridge\"}},\"executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)\":{\"params\":{\"_amount\":\"The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.\",\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"Arbitrary message bytes originated from and encoded by the source app contract\",\"_sender\":\"The address of the source app contract\",\"_srcChainId\":\"The source chain ID where the transfer is originated from\",\"_token\":\"The address of the token that comes out of the bridge\"}},\"executeMessageWithTransferRefund(address,uint256,bytes,address)\":{\"params\":{\"_amount\":\"The amount of the original transfer\",\"_executor\":\"Address who called the MessageBus execution function\",\"_message\":\"The same message associated with the original transfer\",\"_token\":\"The token address of the original transfer\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"sendTo(address,uint256,uint64,address)\":{\"params\":{\"_dstChid\":\"dest chain ID\",\"_id\":\"nft token ID to bridge\",\"_nft\":\"address of source NFT contract\",\"_receiver\":\"receiver address on dest chain\"}},\"sendTo(address,uint256,uint64,bytes)\":{\"params\":{\"_dstChid\":\"dest chain ID\",\"_id\":\"nft token ID to bridge\",\"_nft\":\"address of source NFT contract\",\"_receiver\":\"receiver address on dest chain, arbitrary bytes\"}},\"totalFee(uint64,address,uint256)\":{\"details\":\"we assume if dst chain address are bytes, user and nft are same length, otherwise we need to add receiver to args\",\"params\":{\"_dstChid\":\"dest chain ID\",\"_id\":\"token ID to bridge (need to get accurate tokenURI length)\",\"_nft\":\"address of source NFT contract\"},\"returns\":{\"_0\":\"total fee needed for user tx\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"NFT Bridge \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"destBridge(uint64)\":{\"notice\":\"per dest chain id NFTBridge address\"},\"destBridge2(uint64)\":{\"notice\":\"only for non-evm chains and address can't fit 20bytes\"},\"destNFTAddr(address,uint64)\":{\"notice\":\"first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain\"},\"destTxFee(uint64)\":{\"notice\":\"per dest chain id executor fee in this chain's gas token\"},\"executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)\":{\"notice\":\"Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address.\"},\"executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)\":{\"notice\":\"Only called by MessageBus (MessageBusReceiver) if         1. executeMessageWithTransfer reverts, or         2. executeMessageWithTransfer returns ExecutionStatus.Fail\"},\"executeMessageWithTransferRefund(address,uint256,bytes,address)\":{\"notice\":\"Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract\"},\"origNFT(address)\":{\"notice\":\"only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint. not applicable for mcn nft (always burn/mint)\"},\"sendTo(address,uint256,uint64,address)\":{\"notice\":\"locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain\"},\"sendTo(address,uint256,uint64,bytes)\":{\"notice\":\"locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain\"},\"totalFee(uint64,address,uint256)\":{\"notice\":\"totalFee returns gas token value to be set in user tx, includes both msg fee and executor fee for dest chain\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/message/apps/nft-bridge/NFTBridge.sol\":\"NFTBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/message/apps/nft-bridge/NFTBridge.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.8.9;\\n\\nimport \\\"../../framework/MessageReceiverApp.sol\\\";\\nimport \\\"../../interfaces/IMessageBus.sol\\\";\\nimport \\\"../../../safeguard/Pauser.sol\\\";\\n\\n// interface for NFT contract, ERC721 and metadata, only funcs needed by NFTBridge\\ninterface INFT {\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    // we do not support NFT that charges transfer fees\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    // impl by NFToken contract, mint an NFT with id and uri to user or burn\\n    function bridgeMint(\\n        address to,\\n        uint256 id,\\n        string memory uri\\n    ) external;\\n\\n    function burn(uint256 id) external;\\n}\\n\\n/** @title NFT Bridge */\\ncontract NFTBridge is MessageReceiverApp, Pauser {\\n    /// per dest chain id executor fee in this chain's gas token\\n    mapping(uint64 => uint256) public destTxFee;\\n    /// per dest chain id NFTBridge address\\n    mapping(uint64 => address) public destBridge;\\n    /// first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain\\n    mapping(address => mapping(uint64 => address)) public destNFTAddr;\\n\\n    /// only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint.\\n    /// not applicable for mcn nft (always burn/mint)\\n    mapping(address => bool) public origNFT;\\n\\n    /// only for non-evm chains and address can't fit 20bytes\\n    mapping(uint64 => bytes) public destBridge2;\\n    mapping(address => mapping(uint64 => bytes)) public destNFTAddr2;\\n\\n    struct NFTMsg {\\n        address user; // receiver of minted or withdrawn NFT\\n        address nft; // NFT contract on mint/withdraw chain\\n        uint256 id; // token ID\\n        string uri; // tokenURI from source NFT\\n    }\\n    // for non-evm dst chain, address type is bytes\\n    struct NFTMsg2 {\\n        bytes user; // receiver of minted or withdrawn NFT\\n        bytes nft; // NFT contract on mint/withdraw chain\\n        uint256 id; // token ID\\n        string uri; // tokenURI from source NFT\\n    }\\n    // emit in deposit or burn\\n    event Sent(address sender, address srcNft, uint256 id, uint64 dstChid, address receiver, address dstNft);\\n    // bytes type for receiver and dstNft\\n    event Sent2(address sender, address srcNft, uint256 id, uint64 dstChid, bytes receiver, bytes dstNft);\\n    // emit for mint or withdraw message\\n    event Received(address receiver, address nft, uint256 id, uint64 srcChid);\\n\\n    // emit when params change\\n    event SetDestNFT(address srcNft, uint64 dstChid, address dstNft);\\n    event SetTxFee(uint64 chid, uint256 fee);\\n    event SetDestBridge(uint64 dstChid, address dstNftBridge);\\n    event FeeClaimed(uint256 amount);\\n    event SetOrigNFT(address nft, bool isOrig);\\n    // emit if executeMessage calls nft transfer or bridgeMint returns error\\n    event ExtCallErr(bytes returnData);\\n\\n    event SetDestNFT2(address srcNft, uint64 dstChid, bytes dstNft);\\n    event SetDestBridge2(uint64 dstChid, bytes dstNftBridge);\\n\\n    constructor(address _msgBus) {\\n        messageBus = _msgBus;\\n    }\\n\\n    // only to be called by Proxy via delegatecall and will modify Proxy state\\n    // initOwner will fail if owner is already set, so only delegateCall will work\\n    function init(address _msgBus) external {\\n        initOwner();\\n        messageBus = _msgBus;\\n    }\\n\\n    /**\\n     * @notice totalFee returns gas token value to be set in user tx, includes both msg fee and executor fee for dest chain\\n     * @dev we assume if dst chain address are bytes, user and nft are same length, otherwise we need to add receiver to args\\n     * @param _dstChid dest chain ID\\n     * @param _nft address of source NFT contract\\n     * @param _id token ID to bridge (need to get accurate tokenURI length)\\n     * @return total fee needed for user tx\\n     */\\n    function totalFee(\\n        uint64 _dstChid,\\n        address _nft,\\n        uint256 _id\\n    ) external view returns (uint256) {\\n        string memory _uri = INFT(_nft).tokenURI(_id);\\n        bytes memory message;\\n        // try non-evm first\\n        bytes memory dstNft = destNFTAddr2[_nft][_dstChid];\\n        if (dstNft.length > 0) {\\n            message = abi.encode(NFTMsg2(dstNft, dstNft, _id, _uri));\\n        } else {\\n            // evm chains or not configured, assume to be evm, 20 bytes address\\n            message = abi.encode(NFTMsg(_nft, _nft, _id, _uri));\\n        }\\n        return IMessageBus(messageBus).calcFee(message) + destTxFee[_dstChid];\\n    }\\n\\n    // ===== called by user\\n    /**\\n     * @notice locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain\\n     * @param _nft address of source NFT contract\\n     * @param _id nft token ID to bridge\\n     * @param _dstChid dest chain ID\\n     * @param _receiver receiver address on dest chain\\n     */\\n    function sendTo(\\n        address _nft,\\n        uint256 _id,\\n        uint64 _dstChid,\\n        address _receiver\\n    ) external payable whenNotPaused {\\n        require(msg.sender == INFT(_nft).ownerOf(_id), \\\"not token owner\\\");\\n        // must save _uri before burn\\n        string memory _uri = INFT(_nft).tokenURI(_id);\\n        lockOrBurn(_nft, _id);\\n        (address _dstBridge, address _dstNft) = checkAddr(_nft, _dstChid);\\n        msgBus(_dstBridge, _dstChid, abi.encode(NFTMsg(_receiver, _dstNft, _id, _uri)));\\n        emit Sent(msg.sender, _nft, _id, _dstChid, _receiver, _dstNft);\\n    }\\n\\n    /**\\n     * @notice locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain\\n     * @param _nft address of source NFT contract\\n     * @param _id nft token ID to bridge\\n     * @param _dstChid dest chain ID\\n     * @param _receiver receiver address on dest chain, arbitrary bytes\\n     */\\n    function sendTo(\\n        address _nft,\\n        uint256 _id,\\n        uint64 _dstChid,\\n        bytes calldata _receiver\\n    ) external payable whenNotPaused {\\n        require(msg.sender == INFT(_nft).ownerOf(_id), \\\"not token owner\\\");\\n        // must save _uri before burn\\n        string memory _uri = INFT(_nft).tokenURI(_id);\\n        lockOrBurn(_nft, _id);\\n        (bytes memory _dstBridge, bytes memory _dstNft) = checkAddr2(_nft, _dstChid);\\n        msgBus(_dstBridge, _dstChid, abi.encode(NFTMsg2(_receiver, _dstNft, _id, _uri)));\\n        emit Sent2(msg.sender, _nft, _id, _dstChid, _receiver, _dstNft);\\n    }\\n\\n    // ===== called by MCN NFT after NFT is burnt\\n    function sendMsg(\\n        uint64 _dstChid,\\n        address _sender,\\n        address _receiver,\\n        uint256 _id,\\n        string calldata _uri\\n    ) external payable whenNotPaused {\\n        address _nft = msg.sender;\\n        (address _dstBridge, address _dstNft) = checkAddr(_nft, _dstChid);\\n        msgBus(_dstBridge, _dstChid, abi.encode(NFTMsg(_receiver, _dstNft, _id, _uri)));\\n        emit Sent(_sender, _nft, _id, _dstChid, _receiver, _dstNft);\\n    }\\n\\n    // for non-evm chains and address can't fit 20bytes or non-hex\\n    function sendMsg(\\n        uint64 _dstChid,\\n        address _sender,\\n        bytes calldata _receiver,\\n        uint256 _id,\\n        string calldata _uri\\n    ) external payable whenNotPaused {\\n        address _nft = msg.sender;\\n        (bytes memory _dstBridge, bytes memory _dstNft) = checkAddr2(_nft, _dstChid);\\n        msgBus(_dstBridge, _dstChid, abi.encode(NFTMsg2(_receiver, _dstNft, _id, _uri)));\\n        emit Sent2(_sender, _nft, _id, _dstChid, _receiver, _dstNft);\\n    }\\n\\n    // ===== called by msgbus\\n    function executeMessage(\\n        address sender,\\n        uint64 srcChid,\\n        bytes calldata _message,\\n        address // executor\\n    ) external payable override onlyMessageBus returns (ExecutionStatus) {\\n        // Must check sender to ensure msg is from another nft bridge\\n        // but we allow retry later in case it's a temporary config error\\n        // risk is invalid sender will be retried but this can be easily filtered\\n        // in executor or require manual trigger for retry\\n        if (paused() || sender != destBridge[srcChid]) {\\n            return ExecutionStatus.Retry;\\n        }\\n        return xferOrMint(_message, srcChid);\\n    }\\n\\n    function executeMessage(\\n        bytes calldata sender,\\n        uint64 srcChid,\\n        bytes calldata _message,\\n        address // executor\\n    ) external payable override onlyMessageBus returns (ExecutionStatus) {\\n        if (paused() || keccak256(sender) != keccak256(destBridge2[srcChid])) {\\n            return ExecutionStatus.Retry;\\n        }\\n        return xferOrMint(_message, srcChid);\\n    }\\n\\n    // ===== internal utils\\n    // lockOrBurn on sender side\\n    function lockOrBurn(address _nft, uint256 _id) internal {\\n        if (origNFT[_nft] == true) {\\n            // deposit\\n            INFT(_nft).transferFrom(msg.sender, address(this), _id);\\n            require(INFT(_nft).ownerOf(_id) == address(this), \\\"transfer NFT failed\\\");\\n        } else {\\n            // burn\\n            INFT(_nft).burn(_id);\\n        }\\n    }\\n\\n    // xferOrMint on receiver side, transfer or mint NFT to receiver\\n    function xferOrMint(bytes calldata _message, uint64 srcChid) internal returns (ExecutionStatus) {\\n        // withdraw original locked nft back to user, or mint new nft depending on if this is the orig chain of nft\\n        NFTMsg memory nftMsg = abi.decode((_message), (NFTMsg));\\n        // if we are on nft orig chain, use transfer, otherwise, use mint\\n        // we must never return fail because burnt nft will be lost forever\\n        if (origNFT[nftMsg.nft] == true) {\\n            try INFT(nftMsg.nft).transferFrom(address(this), nftMsg.user, nftMsg.id) {\\n                // do nothing here to move on to emit Received event and return success\\n            } catch (bytes memory returnData) {\\n                emit ExtCallErr(returnData);\\n                return ExecutionStatus.Retry;\\n            }\\n        } else {\\n            try INFT(nftMsg.nft).bridgeMint(nftMsg.user, nftMsg.id, nftMsg.uri) {\\n                // do nothing here to move on to emit Received event and return success\\n            } catch (bytes memory returnData) {\\n                emit ExtCallErr(returnData);\\n                return ExecutionStatus.Retry;\\n            }\\n        }\\n        emit Received(nftMsg.user, nftMsg.nft, nftMsg.id, srcChid);\\n        return ExecutionStatus.Success;\\n    }\\n\\n    // check _nft and destChid are valid, return dstBridge and dstNft\\n    function checkAddr(address _nft, uint64 _dstChid) internal view returns (address dstBridge, address dstNft) {\\n        dstBridge = destBridge[_dstChid];\\n        require(dstBridge != address(0), \\\"dest NFT Bridge not found\\\");\\n        dstNft = destNFTAddr[_nft][_dstChid];\\n        require(dstNft != address(0), \\\"dest NFT not found\\\");\\n    }\\n\\n    function checkAddr2(address _nft, uint64 _dstChid)\\n        internal\\n        view\\n        returns (bytes memory dstBridge, bytes memory dstNft)\\n    {\\n        dstBridge = destBridge2[_dstChid];\\n        require(dstBridge.length != 0, \\\"dest NFT Bridge not found\\\");\\n        dstNft = destNFTAddr2[_nft][_dstChid];\\n        require(dstNft.length != 0, \\\"dest NFT not found\\\");\\n    }\\n\\n    // check fee and call msgbus sendMessage\\n    function msgBus(\\n        address _dstBridge,\\n        uint64 _dstChid,\\n        bytes memory message\\n    ) internal {\\n        uint256 fee = IMessageBus(messageBus).calcFee(message);\\n        require(msg.value >= fee + destTxFee[_dstChid], \\\"insufficient fee\\\");\\n        IMessageBus(messageBus).sendMessage{value: fee}(_dstBridge, _dstChid, message);\\n    }\\n\\n    function msgBus(\\n        bytes memory _dstBridge,\\n        uint64 _dstChid,\\n        bytes memory message\\n    ) internal {\\n        uint256 fee = IMessageBus(messageBus).calcFee(message);\\n        require(msg.value >= fee + destTxFee[_dstChid], \\\"insufficient fee\\\");\\n        IMessageBus(messageBus).sendMessage{value: fee}(_dstBridge, _dstChid, message);\\n    }\\n\\n    // only owner\\n    // set per NFT, per chain id, address\\n    function setDestNFT(\\n        address srcNft,\\n        uint64 dstChid,\\n        address dstNft\\n    ) external onlyOwner {\\n        destNFTAddr[srcNft][dstChid] = dstNft;\\n        emit SetDestNFT(srcNft, dstChid, dstNft);\\n    }\\n\\n    // add to destNFTAddr2\\n    function setDestNFT(\\n        address srcNft,\\n        uint64 dstChid,\\n        bytes calldata dstNft\\n    ) external onlyOwner {\\n        destNFTAddr2[srcNft][dstChid] = dstNft;\\n        emit SetDestNFT2(srcNft, dstChid, dstNft);\\n    }\\n\\n    // set all dest chains\\n    function setDestNFTs(\\n        address srcNft,\\n        uint64[] calldata dstChid,\\n        address[] calldata dstNft\\n    ) external onlyOwner {\\n        require(dstChid.length == dstNft.length, \\\"length mismatch\\\");\\n        for (uint256 i = 0; i < dstChid.length; i++) {\\n            destNFTAddr[srcNft][dstChid[i]] = dstNft[i];\\n        }\\n    }\\n\\n    // set destTxFee\\n    function setTxFee(uint64 chid, uint256 fee) external onlyOwner {\\n        destTxFee[chid] = fee;\\n        emit SetTxFee(chid, fee);\\n    }\\n\\n    // set per chain id, nft bridge address\\n    function setDestBridge(uint64 dstChid, address dstNftBridge) external onlyOwner {\\n        destBridge[dstChid] = dstNftBridge;\\n        emit SetDestBridge(dstChid, dstNftBridge);\\n    }\\n\\n    function setDestBridge(uint64 dstChid, bytes calldata dstNftBridge) external onlyOwner {\\n        destBridge2[dstChid] = dstNftBridge;\\n        emit SetDestBridge2(dstChid, dstNftBridge);\\n    }\\n\\n    // batch set nft bridge addresses for multiple chainids\\n    function setDestBridges(uint64[] calldata dstChid, address[] calldata dstNftBridge) external onlyOwner {\\n        for (uint256 i = 0; i < dstChid.length; i++) {\\n            destBridge[dstChid[i]] = dstNftBridge[i];\\n        }\\n    }\\n\\n    // only called on NFT's orig chain, not applicable for mcn nft\\n    function setOrigNFT(address _nft) external onlyOwner {\\n        origNFT[_nft] = true;\\n        emit SetOrigNFT(_nft, true);\\n    }\\n\\n    // remove origNFT entry\\n    function delOrigNFT(address _nft) external onlyOwner {\\n        delete origNFT[_nft];\\n        emit SetOrigNFT(_nft, false);\\n    }\\n\\n    // send all gas token this contract has to owner\\n    function claimFee() external onlyOwner {\\n        uint256 amount = address(this).balance;\\n        payable(msg.sender).transfer(amount);\\n        emit FeeClaimed(amount);\\n    }\\n}\\n\",\"keccak256\":\"0x486040fbf087ee2c47efb1d6c226d835609cbc6e51226b586399c85784be2e0e\",\"license\":\"GPL-3.0-only\"},\"contracts/message/framework/MessageBusAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../../safeguard/Ownable.sol\\\";\\n\\nabstract contract MessageBusAddress is Ownable {\\n    event MessageBusUpdated(address messageBus);\\n\\n    address public messageBus;\\n\\n    function setMessageBus(address _messageBus) public onlyOwner {\\n        messageBus = _messageBus;\\n        emit MessageBusUpdated(messageBus);\\n    }\\n}\\n\",\"keccak256\":\"0xa5ba122d7b4f48d89cdb79b3678e392651457720ed52732f433ca7eca1ff182a\",\"license\":\"GPL-3.0-only\"},\"contracts/message/framework/MessageReceiverApp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/IMessageReceiverApp.sol\\\";\\nimport \\\"./MessageBusAddress.sol\\\";\\n\\nabstract contract MessageReceiverApp is IMessageReceiverApp, MessageBusAddress {\\n    modifier onlyMessageBus() {\\n        require(msg.sender == messageBus, \\\"caller is not message bus\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s\\n     *         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address.\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransfer(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    /**\\n     * @notice Only called by MessageBus (MessageBusReceiver) if\\n     *         1. executeMessageWithTransfer reverts, or\\n     *         2. executeMessageWithTransfer returns ExecutionStatus.Fail\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferFallback(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract\\n     * @param _token The token address of the original transfer\\n     * @param _amount The amount of the original transfer\\n     * @param _message The same message associated with the original transfer\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferRefund(\\n        address _token,\\n        uint256 _amount,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver)\\n     * @param _sender The address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        address _sender,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n\\n    // execute message from non-evm chain with bytes for sender address,\\n    // otherwise same as above.\\n    function executeMessage(\\n        bytes calldata _sender,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable virtual override onlyMessageBus returns (ExecutionStatus) {}\\n}\\n\",\"keccak256\":\"0xf6cb518e78bc756e6f068d13a9353eb39a9a94fdd3adb9f39a2308ccd6283826\",\"license\":\"GPL-3.0-only\"},\"contracts/message/interfaces/IMessageBus.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../libraries/MsgDataTypes.sol\\\";\\n\\ninterface IMessageBus {\\n    function liquidityBridge() external view returns (address);\\n\\n    function pegBridge() external view returns (address);\\n\\n    function pegBridgeV2() external view returns (address);\\n\\n    function pegVault() external view returns (address);\\n\\n    function pegVaultV2() external view returns (address);\\n\\n    /**\\n     * @notice Calculates the required fee for the message.\\n     * @param _message Arbitrary message bytes to be decoded by the destination app contract.\\n     @ @return The required fee.\\n     */\\n    function calcFee(bytes calldata _message) external view returns (uint256);\\n\\n    /**\\n     * @notice Sends a message to a contract on another chain.\\n     * Sender needs to make sure the uniqueness of the message Id, which is computed as\\n     * hash(type.MessageOnly, sender, receiver, srcChainId, srcTxHash, dstChainId, message).\\n     * If messages with the same Id are sent, only one of them will succeed at dst chain..\\n     * A fee is charged in the native gas token.\\n     * @param _receiver The address of the destination app contract.\\n     * @param _dstChainId The destination chain ID.\\n     * @param _message Arbitrary message bytes to be decoded by the destination app contract.\\n     */\\n    function sendMessage(\\n        address _receiver,\\n        uint256 _dstChainId,\\n        bytes calldata _message\\n    ) external payable;\\n\\n    // receiver is non-evm chain address\\n    function sendMessage(\\n        bytes calldata _receiver,\\n        uint256 _dstChainId,\\n        bytes calldata _message\\n    ) external payable;\\n\\n    /**\\n     * @notice Sends a message associated with a transfer to a contract on another chain.\\n     * If messages with the same srcTransferId are sent, only one of them will succeed at dst chain..\\n     * A fee is charged in the native token.\\n     * @param _receiver The address of the destination app contract.\\n     * @param _dstChainId The destination chain ID.\\n     * @param _srcBridge The bridge contract to send the transfer with.\\n     * @param _srcTransferId The transfer ID.\\n     * @param _dstChainId The destination chain ID.\\n     * @param _message Arbitrary message bytes to be decoded by the destination app contract.\\n     */\\n    function sendMessageWithTransfer(\\n        address _receiver,\\n        uint256 _dstChainId,\\n        address _srcBridge,\\n        bytes32 _srcTransferId,\\n        bytes calldata _message\\n    ) external payable;\\n\\n    /**\\n     * @notice Withdraws message fee in the form of native gas token.\\n     * @param _account The address receiving the fee.\\n     * @param _cumulativeFee The cumulative fee credited to the account. Tracked by SGN.\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A withdrawal must be\\n     * signed-off by +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function withdrawFee(\\n        address _account,\\n        uint256 _cumulativeFee,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external;\\n\\n    /**\\n     * @notice Execute a message with a successful transfer.\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _transfer The transfer info.\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A relay must be signed-off by\\n     * +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function executeMessageWithTransfer(\\n        bytes calldata _message,\\n        MsgDataTypes.TransferInfo calldata _transfer,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external payable;\\n\\n    /**\\n     * @notice Execute a message with a refunded transfer.\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _transfer The transfer info.\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A relay must be signed-off by\\n     * +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function executeMessageWithTransferRefund(\\n        bytes calldata _message, // the same message associated with the original transfer\\n        MsgDataTypes.TransferInfo calldata _transfer,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external payable;\\n\\n    /**\\n     * @notice Execute a message not associated with a transfer.\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _sigs The list of signatures sorted by signing addresses in ascending order. A relay must be signed-off by\\n     * +2/3 of the sigsVerifier's current signing power to be delivered.\\n     * @param _signers The sorted list of signers.\\n     * @param _powers The signing powers of the signers.\\n     */\\n    function executeMessage(\\n        bytes calldata _message,\\n        MsgDataTypes.RouteInfo calldata _route,\\n        bytes[] calldata _sigs,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x07c7386fb723388d4490f38ef2762111bf9693c1520d2ae2b72d5daf5605eefa\",\"license\":\"GPL-3.0-only\"},\"contracts/message/interfaces/IMessageReceiverApp.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageReceiverApp {\\n    enum ExecutionStatus {\\n        Fail, // execution failed, finalized\\n        Success, // execution succeeded, finalized\\n        Retry // execution rejected, can retry later\\n    }\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s\\n     *         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address.\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransfer(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    /**\\n     * @notice Only called by MessageBus (MessageBusReceiver) if\\n     *         1. executeMessageWithTransfer reverts, or\\n     *         2. executeMessageWithTransfer returns ExecutionStatus.Fail\\n     * @param _sender The address of the source app contract\\n     * @param _token The address of the token that comes out of the bridge\\n     * @param _amount The amount of tokens received at this contract through the cross-chain bridge.\\n     *        the contract that implements this contract can safely assume that the tokens will arrive before this\\n     *        function is called.\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferFallback(\\n        address _sender,\\n        address _token,\\n        uint256 _amount,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract\\n     * @param _token The token address of the original transfer\\n     * @param _amount The amount of the original transfer\\n     * @param _message The same message associated with the original transfer\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessageWithTransferRefund(\\n        address _token,\\n        uint256 _amount,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    /**\\n     * @notice Called by MessageBus (MessageBusReceiver)\\n     * @param _sender The address of the source app contract\\n     * @param _srcChainId The source chain ID where the transfer is originated from\\n     * @param _message Arbitrary message bytes originated from and encoded by the source app contract\\n     * @param _executor Address who called the MessageBus execution function\\n     */\\n    function executeMessage(\\n        address _sender,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n\\n    // execute message from non-evm chain with bytes for sender address,\\n    // otherwise same as above.\\n    function executeMessage(\\n        bytes calldata _sender,\\n        uint64 _srcChainId,\\n        bytes calldata _message,\\n        address _executor\\n    ) external payable returns (ExecutionStatus);\\n}\\n\",\"keccak256\":\"0x434d5e61e406e189c3e3b5c486a593a87f9d95a003f5d91662dcca7018939f59\",\"license\":\"GPL-3.0-only\"},\"contracts/message/libraries/MsgDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nlibrary MsgDataTypes {\\n    // bridge operation type at the sender side (src chain)\\n    enum BridgeSendType {\\n        Null,\\n        Liquidity,\\n        PegDeposit,\\n        PegBurn,\\n        PegV2Deposit,\\n        PegV2Burn,\\n        PegV2BurnFrom\\n    }\\n\\n    // bridge operation type at the receiver side (dst chain)\\n    enum TransferType {\\n        Null,\\n        LqRelay, // relay through liquidity bridge\\n        LqWithdraw, // withdraw from liquidity bridge\\n        PegMint, // mint through pegged token bridge\\n        PegWithdraw, // withdraw from original token vault\\n        PegV2Mint, // mint through pegged token bridge v2\\n        PegV2Withdraw // withdraw from original token vault v2\\n    }\\n\\n    enum MsgType {\\n        MessageWithTransfer,\\n        MessageOnly\\n    }\\n\\n    enum TxStatus {\\n        Null,\\n        Success,\\n        Fail,\\n        Fallback,\\n        Pending // transient state within a transaction\\n    }\\n\\n    struct TransferInfo {\\n        TransferType t;\\n        address sender;\\n        address receiver;\\n        address token;\\n        uint256 amount;\\n        uint64 wdseq; // only needed for LqWithdraw (refund)\\n        uint64 srcChainId;\\n        bytes32 refId;\\n        bytes32 srcTxHash; // src chain msg tx hash\\n    }\\n\\n    struct RouteInfo {\\n        address sender;\\n        address receiver;\\n        uint64 srcChainId;\\n        bytes32 srcTxHash; // src chain msg tx hash\\n    }\\n\\n    // used for msg from non-evm chains with longer-bytes address\\n    struct RouteInfo2 {\\n        bytes sender;\\n        address receiver;\\n        uint64 srcChainId;\\n        bytes32 srcTxHash;\\n    }\\n\\n    // combination of RouteInfo and RouteInfo2 for easier processing\\n    struct Route {\\n        address sender; // from RouteInfo\\n        bytes senderBytes; // from RouteInfo2\\n        address receiver;\\n        uint64 srcChainId;\\n        bytes32 srcTxHash;\\n    }\\n\\n    struct MsgWithTransferExecutionParams {\\n        bytes message;\\n        TransferInfo transfer;\\n        bytes[] sigs;\\n        address[] signers;\\n        uint256[] powers;\\n    }\\n\\n    struct BridgeTransferParams {\\n        bytes request;\\n        bytes[] sigs;\\n        address[] signers;\\n        uint256[] powers;\\n    }\\n}\\n\",\"keccak256\":\"0x72702f5ea90c12d59a96dd1660f1588b35bcca83bbe11a5ebe88868327291543\",\"license\":\"GPL-3.0-only\"},\"contracts/safeguard/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n *\\n * This adds a normal func that setOwner if _owner is address(0). So we can't allow\\n * renounceOwnership. So we can support Proxy based upgradable contract\\n */\\nabstract contract Ownable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Only to be called by inherit contracts, in their init func called by Proxy\\n     * we require _owner == address(0), which is only possible when it's a delegateCall\\n     * because constructor sets _owner in contract state.\\n     */\\n    function initOwner() internal {\\n        require(_owner == address(0), \\\"owner already set\\\");\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x2a92103195b8dce0f34fdf9bf7f94ddf38bf8edf0c0fd4be21323c47016687e9\",\"license\":\"GPL-3.0-only\"},\"contracts/safeguard/Pauser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"./Ownable.sol\\\";\\n\\nabstract contract Pauser is Ownable, Pausable {\\n    mapping(address => bool) public pausers;\\n\\n    event PauserAdded(address account);\\n    event PauserRemoved(address account);\\n\\n    constructor() {\\n        _addPauser(msg.sender);\\n    }\\n\\n    modifier onlyPauser() {\\n        require(isPauser(msg.sender), \\\"Caller is not pauser\\\");\\n        _;\\n    }\\n\\n    function pause() public onlyPauser {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyPauser {\\n        _unpause();\\n    }\\n\\n    function isPauser(address account) public view returns (bool) {\\n        return pausers[account];\\n    }\\n\\n    function addPauser(address account) public onlyOwner {\\n        _addPauser(account);\\n    }\\n\\n    function removePauser(address account) public onlyOwner {\\n        _removePauser(account);\\n    }\\n\\n    function renouncePauser() public {\\n        _removePauser(msg.sender);\\n    }\\n\\n    function _addPauser(address account) private {\\n        require(!isPauser(account), \\\"Account is already pauser\\\");\\n        pausers[account] = true;\\n        emit PauserAdded(account);\\n    }\\n\\n    function _removePauser(address account) private {\\n        require(isPauser(account), \\\"Account is not pauser\\\");\\n        pausers[account] = false;\\n        emit PauserRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x5d6bf2c82f3467d50d9f7c653b20a47ab3bbe3e81699600fc03eb8f796d005bb\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003da338038062003da3833981016040819052620000349162000195565b6200003f336200007d565b6001805460ff60a01b191690556200005733620000cd565b600180546001600160a01b0319166001600160a01b0392909216919091179055620001c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526002602052604090205460ff16156200013b5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c72656164792070617573657200000000000000604482015260640160405180910390fd5b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8910160405180910390a150565b600060208284031215620001a857600080fd5b81516001600160a01b0381168114620001c057600080fd5b9392505050565b613bcc80620001d76000396000f3fe6080604052600436106102a05760003560e01c80636ef8d66d1161016e5780639e041b9d116100cb578063ed99bf431161007f578063ee91bab811610064578063ee91bab814610760578063f0cb57ce14610773578063f2fde38b1461078657600080fd5b8063ed99bf4314610720578063edea75921461074057600080fd5b8063a1a227fa116100b0578063a1a227fa146106cd578063b2c88775146106ed578063da754f441461070057600080fd5b80639e041b9d1461066c5780639f825f07146106ad57600080fd5b80638da5cb5b1161012257806399d32fc41161010757806399d32fc4146106245780639c1a65bd146106395780639c649fdf1461065957600080fd5b80638da5cb5b146105e657806395b6a1911461060457600080fd5b806380f51c121161015357806380f51c121461058157806382dc1ec4146105b15780638456cb59146105d157600080fd5b80636ef8d66d1461056c5780637cd2bffc1461050757600080fd5b80633f4ba83a1161021c578063583624b7116101d05780635c975abb116101b55780635c975abb1461051a5780635d5b09f2146105395780636b2c0f551461054c57600080fd5b8063583624b7146104e75780635ab7afc61461050757600080fd5b806346fbf68e1161020157806346fbf68e1461046e5780634cc42351146104a7578063547cad12146104c757600080fd5b80633f4ba83a1461043957806343a8c1371461044e57600080fd5b8063151ff4eb116102735780631de13e43116102585780631de13e431461039e57806327cbe705146103cb5780632d5fa47c1461041957600080fd5b8063151ff4eb1461034357806319ab453c1461037e57600080fd5b8063063ce4e5146102a5578063065c38fd146102ce5780630bcb4982146102f05780631140c84e14610303575b600080fd5b6102b86102b3366004612e65565b6107a6565b6040516102c59190612efb565b60405180910390f35b3480156102da57600080fd5b506102ee6102e9366004612f23565b61088a565b005b6102b86102fe366004612f40565b610943565b34801561030f57600080fd5b5061033361031e366004612f23565b60066020526000908152604090205460ff1681565b60405190151581526020016102c5565b34801561034f57600080fd5b5061037061035e366004612fb4565b60036020526000908152604090205481565b6040519081526020016102c5565b34801561038a57600080fd5b506102ee610399366004612f23565b6109a9565b3480156103aa57600080fd5b506103be6103b9366004612fcf565b6109d3565b6040516102c59190613060565b3480156103d757600080fd5b506104016103e6366004612fb4565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102c5565b34801561042557600080fd5b506102ee6104343660046130b8565b610a78565b34801561044557600080fd5b506102ee610be2565b34801561045a57600080fd5b506102ee61046936600461313b565b610c4b565b34801561047a57600080fd5b50610333610489366004612f23565b6001600160a01b031660009081526002602052604090205460ff1690565b3480156104b357600080fd5b506103be6104c2366004612fb4565b610d50565b3480156104d357600080fd5b506102ee6104e2366004612f23565b610d69565b3480156104f357600080fd5b506102ee6105023660046131a7565b610e0e565b6102b86105153660046131fe565b610ee1565b34801561052657600080fd5b50600154600160a01b900460ff16610333565b6102ee610547366004613295565b610f49565b34801561055857600080fd5b506102ee610567366004612f23565b6111cb565b34801561057857600080fd5b506102ee61122e565b34801561058d57600080fd5b5061033361059c366004612f23565b60026020526000908152604090205460ff1681565b3480156105bd57600080fd5b506102ee6105cc366004612f23565b611237565b3480156105dd57600080fd5b506102ee611297565b3480156105f257600080fd5b506000546001600160a01b0316610401565b34801561061057600080fd5b506102ee61061f3660046132f5565b6112fe565b34801561063057600080fd5b506102ee6113df565b34801561064557600080fd5b5061037061065436600461333e565b611496565b6102b861066736600461337d565b61172d565b34801561067857600080fd5b50610401610687366004612fcf565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b3480156106b957600080fd5b506102ee6106c83660046133ca565b6117df565b3480156106d957600080fd5b50600154610401906001600160a01b031681565b6102ee6106fb3660046133f4565b611890565b34801561070c57600080fd5b506102ee61071b366004613445565b611b10565b34801561072c57600080fd5b506102ee61073b366004612f23565b611bd1565b34801561074c57600080fd5b506102ee61075b36600461347c565b611c7f565b6102ee61076e3660046134cf565b611d2e565b6102ee61078136600461356c565b611e7d565b34801561079257600080fd5b506102ee6107a1366004612f23565b611fcd565b6001546000906001600160a01b031633146108085760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064015b60405180910390fd5b600154600160a01b900460ff1680610865575067ffffffffffffffff8516600090815260076020526040908190209051610842919061362a565b6040518091039020878760405161085a9291906136c6565b604051809103902014155b1561087257506002610880565b61087d8484876120a9565b90505b9695505050505050565b3361089d6000546001600160a01b031690565b6001600160a01b0316146108e15760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b038116600081815260066020908152604091829020805460ff191660019081179091558251938452908301527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf891015b60405180910390a150565b6001546000906001600160a01b031633146109a05760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064016107ff565b95945050505050565b6109b16122d9565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6008602090815260009283526040808420909152908252902080546109f7906135ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610a23906135ef565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b505050505081565b33610a8b6000546001600160a01b031690565b6001600160a01b031614610acf5760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b828114610b1e5760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d61746368000000000000000000000000000000000060448201526064016107ff565b60005b83811015610bda57828282818110610b3b57610b3b6136d6565b9050602002016020810190610b509190612f23565b6001600160a01b038716600090815260056020526040812090878785818110610b7b57610b7b6136d6565b9050602002016020810190610b909190612fb4565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905580610bd281613702565b915050610b21565b505050505050565b3360009081526002602052604090205460ff16610c415760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f742070617573657200000000000000000000000060448201526064016107ff565b610c4961233b565b565b33610c5e6000546001600160a01b031690565b6001600160a01b031614610ca25760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b60005b83811015610d4957828282818110610cbf57610cbf6136d6565b9050602002016020810190610cd49190612f23565b60046000878785818110610cea57610cea6136d6565b9050602002016020810190610cff9190612fb4565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905580610d4181613702565b915050610ca5565b5050505050565b600760205260009081526040902080546109f7906135ef565b33610d7c6000546001600160a01b031690565b6001600160a01b031614610dc05760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e90602001610938565b33610e216000546001600160a01b031690565b6001600160a01b031614610e655760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b038416600090815260086020908152604080832067ffffffffffffffff871684529091529020610e9d908383612d58565b507f1a8a0120788995f98396f44447190686d4b5978184ca4f9d726d541aed6fb7d684848484604051610ed39493929190613746565b60405180910390a150505050565b6001546000906001600160a01b03163314610f3e5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064016107ff565b979650505050505050565b600154600160a01b900460ff1615610f965760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b6040516331a9108f60e11b8152600481018590526001600160a01b03861690636352211e9060240160206040518083038186803b158015610fd657600080fd5b505afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e9190613779565b6001600160a01b0316336001600160a01b0316146110605760405162461bcd60e51b815260206004820152600f60248201526e3737ba103a37b5b2b71037bbb732b960891b60448201526064016107ff565b60405163c87b56dd60e01b8152600481018590526000906001600160a01b0387169063c87b56dd9060240160006040518083038186803b1580156110a357600080fd5b505afa1580156110b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110df919081019061382e565b90506110eb86866123e1565b6000806110f88887612597565b9150915061117e8287604051806080016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820187905260408083018e90526060909201899052905161116a9291016138a1565b6040516020818303038152906040526127a3565b7f161c0f80e624fd7198682c940eb06e3a33589fef44e083931a0a7908ea1a1a5e338989898989876040516111b99796959493929190613903565b60405180910390a15050505050505050565b336111de6000546001600160a01b031690565b6001600160a01b0316146112225760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b61122b816128fb565b50565b610c49336128fb565b3361124a6000546001600160a01b031690565b6001600160a01b03161461128e5760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b61122b816129b4565b3360009081526002602052604090205460ff166112f65760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f742070617573657200000000000000000000000060448201526064016107ff565b610c49612a71565b336113116000546001600160a01b031690565b6001600160a01b0316146113555760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b03838116600081815260056020908152604080832067ffffffffffffffff88168085529083529281902080546001600160a01b03191695871695861790558051938452908301919091528101919091527fa5a9b84f1b7eb437335ea919a3ff6de6e242e4733d0100a77391106173794871906060015b60405180910390a1505050565b336113f26000546001600160a01b031690565b6001600160a01b0316146114365760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6040514790339082156108fc029083906000818181858888f19350505050158015611465573d6000803e3d6000fd5b506040518181527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e190602001610938565b60405163c87b56dd60e01b81526004810182905260009081906001600160a01b0385169063c87b56dd9060240160006040518083038186803b1580156114db57600080fd5b505afa1580156114ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611517919081019061382e565b6001600160a01b038516600090815260086020908152604080832067ffffffffffffffff8a16845290915281208054929350606092611555906135ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611581906135ef565b80156115ce5780601f106115a3576101008083540402835291602001916115ce565b820191906000526020600020905b8154815290600101906020018083116115b157829003601f168201915b505050505090506000815111156116265760405180608001604052808281526020018281526020018681526020018481525060405160200161161091906138a1565b604051602081830303815290604052915061167b565b6040518060800160405280876001600160a01b03168152602001876001600160a01b03168152602001868152602001848152506040516020016116699190613966565b60405160208183030381529060405291505b67ffffffffffffffff87166000908152600360205260409081902054600154915163299aee5160e11b815290916001600160a01b031690635335dca2906116c6908690600401613060565b60206040518083038186803b1580156116de57600080fd5b505afa1580156116f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171691906139b4565b61172091906139cd565b93505050505b9392505050565b6001546000906001600160a01b0316331461178a5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064016107ff565b600154600160a01b900460ff16806117c7575067ffffffffffffffff85166000908152600460205260409020546001600160a01b03878116911614155b156117d4575060026109a0565b6108808484876120a9565b336117f26000546001600160a01b031690565b6001600160a01b0316146118365760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b67ffffffffffffffff8216600081815260036020908152604091829020849055815192835282018390527f446a287c2114fa54d0083d97ce8f6f15b2ce29fa1c2df4b5a580d581ea7c4ad391015b60405180910390a15050565b600154600160a01b900460ff16156118dd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b6040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e9060240160206040518083038186803b15801561191d57600080fd5b505afa158015611931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119559190613779565b6001600160a01b0316336001600160a01b0316146119a75760405162461bcd60e51b815260206004820152600f60248201526e3737ba103a37b5b2b71037bbb732b960891b60448201526064016107ff565b60405163c87b56dd60e01b8152600481018490526000906001600160a01b0386169063c87b56dd9060240160006040518083038186803b1580156119ea57600080fd5b505afa1580156119fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a26919081019061382e565b9050611a3285856123e1565b600080611a3f8786612af9565b91509150611a9f82866040518060800160405280886001600160a01b03168152602001856001600160a01b031681526020018a815260200187815250604051602001611a8b9190613966565b604051602081830303815290604052612be8565b604080513381526001600160a01b03898116602083015281830189905267ffffffffffffffff881660608301528681166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a150505050505050565b33611b236000546001600160a01b031690565b6001600160a01b031614611b675760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b67ffffffffffffffff821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f3e776334b24c927645043308f89ac1ca734002e5a921ff384a70dcbb88c92cd49101611884565b33611be46000546001600160a01b031690565b6001600160a01b031614611c285760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b0381166000818152600660209081526040808320805460ff191690558051938452908301919091527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf89101610938565b33611c926000546001600160a01b031690565b6001600160a01b031614611cd65760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b67ffffffffffffffff83166000908152600760205260409020611cfa908383612d58565b507ff00f7a8fa03b713f64d18cad2ad60051000162263e005d5ed22c692f42c4a2eb8383836040516113d2939291906139e5565b600154600160a01b900460ff1615611d7b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b33600080611d89838b612597565b91509150611e2e828b60405180608001604052808c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820187905260408083018d90528051601f8c018390048302810183019091528a8152606090920191908b908b9081908401838280828437600092019190915250505091525060405161116a91906020016138a1565b7f161c0f80e624fd7198682c940eb06e3a33589fef44e083931a0a7908ea1a1a5e8984888d8c8c87604051611e699796959493929190613903565b60405180910390a150505050505050505050565b600154600160a01b900460ff1615611eca5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b33600080611ed8838a612af9565b91509150611f58828a60405180608001604052808b6001600160a01b03168152602001856001600160a01b031681526020018a815260200189898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250604051611a8b9190602001613966565b604080516001600160a01b038a81168252858116602083015281830189905267ffffffffffffffff8c1660608301528981166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a1505050505050505050565b33611fe06000546001600160a01b031690565b6001600160a01b0316146120245760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b0381166120a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107ff565b61122b81612d08565b6000806120b884860186613a09565b6020808201516001600160a01b031660009081526006909152604090205490915060ff161515600114156121cf576020810151815160408084015190516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b15801561214357600080fd5b505af1925050508015612154575060015b6121ca573d808015612182576040519150601f19603f3d011682016040523d82523d6000602084013e612187565b606091505b507f2c4d9008b1f58a23591c25a813b398a54f438d50b85bedea3d6e7302ee08a810816040516121b79190613060565b60405180910390a1600292505050611726565b612267565b60208101518151604080840151606085015191516333eba6f160e11b81526001600160a01b03909416936367d74de29361220e93909291600401613ae7565b600060405180830381600087803b15801561222857600080fd5b505af1925050508015612239575060015b612267573d808015612182576040519150601f19603f3d011682016040523d82523d6000602084013e612187565b805160208083015160408085015181516001600160a01b03958616815294909216928401929092528282015267ffffffffffffffff85166060830152517f0aac355db06d21352d6b898d8e0ae1334d55f65b6c4c09e26951166a8eb4dba79181900360800190a1506001949350505050565b6000546001600160a01b0316156123325760405162461bcd60e51b815260206004820152601160248201527f6f776e657220616c72656164792073657400000000000000000000000000000060448201526064016107ff565b610c4933612d08565b600154600160a01b900460ff166123945760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016107ff565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821660009081526006602052604090205460ff16151560011415612541576040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401600060405180830381600087803b15801561245557600080fd5b505af1158015612469573d6000803e3d6000fd5b50506040516331a9108f60e11b8152600481018490523092506001600160a01b0385169150636352211e9060240160206040518083038186803b1580156124af57600080fd5b505afa1580156124c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e79190613779565b6001600160a01b03161461253d5760405162461bcd60e51b815260206004820152601360248201527f7472616e73666572204e4654206661696c65640000000000000000000000000060448201526064016107ff565b5050565b604051630852cd8d60e31b8152600481018290526001600160a01b038316906342966c6890602401600060405180830381600087803b15801561258357600080fd5b505af1158015610bda573d6000803e3d6000fd5b67ffffffffffffffff81166000908152600760205260409020805460609182916125c0906135ef565b80601f01602080910402602001604051908101604052809291908181526020018280546125ec906135ef565b80156126395780601f1061260e57610100808354040283529160200191612639565b820191906000526020600020905b81548152906001019060200180831161261c57829003601f168201915b505050505091508151600014156126925760405162461bcd60e51b815260206004820152601960248201527f64657374204e465420427269646765206e6f7420666f756e640000000000000060448201526064016107ff565b6001600160a01b038416600090815260086020908152604080832067ffffffffffffffff87168452909152902080546126ca906135ef565b80601f01602080910402602001604051908101604052809291908181526020018280546126f6906135ef565b80156127435780601f1061271857610100808354040283529160200191612743565b820191906000526020600020905b81548152906001019060200180831161272657829003601f168201915b5050505050905080516000141561279c5760405162461bcd60e51b815260206004820152601260248201527f64657374204e4654206e6f7420666f756e64000000000000000000000000000060448201526064016107ff565b9250929050565b60015460405163299aee5160e11b81526000916001600160a01b031690635335dca2906127d4908590600401613060565b60206040518083038186803b1580156127ec57600080fd5b505afa158015612800573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282491906139b4565b67ffffffffffffffff841660009081526003602052604090205490915061284b90826139cd565b34101561288d5760405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742066656560801b60448201526064016107ff565b600154604051637d7a101d60e01b81526001600160a01b0390911690637d7a101d9083906128c390889088908890600401613b0f565b6000604051808303818588803b1580156128dc57600080fd5b505af11580156128f0573d6000803e3d6000fd5b505050505050505050565b6001600160a01b03811660009081526002602052604090205460ff166129635760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f7420706175736572000000000000000000000060448201526064016107ff565b6001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e9101610938565b6001600160a01b03811660009081526002602052604090205460ff1615612a1d5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c7265616479207061757365720000000000000060448201526064016107ff565b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f89101610938565b600154600160a01b900460ff1615612abe5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586123c43390565b67ffffffffffffffff81166000908152600460205260408120546001600160a01b03169081612b6a5760405162461bcd60e51b815260206004820152601960248201527f64657374204e465420427269646765206e6f7420666f756e640000000000000060448201526064016107ff565b506001600160a01b03808416600090815260056020908152604080832067ffffffffffffffff87168452909152902054168061279c5760405162461bcd60e51b815260206004820152601260248201527f64657374204e4654206e6f7420666f756e64000000000000000000000000000060448201526064016107ff565b60015460405163299aee5160e11b81526000916001600160a01b031690635335dca290612c19908590600401613060565b60206040518083038186803b158015612c3157600080fd5b505afa158015612c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6991906139b4565b67ffffffffffffffff8416600090815260036020526040902054909150612c9090826139cd565b341015612cd25760405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742066656560801b60448201526064016107ff565b600154604051634f9e72ad60e11b81526001600160a01b0390911690639f3ce55a9083906128c390889088908890600401613b44565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054612d64906135ef565b90600052602060002090601f016020900481019282612d865760008555612dcc565b82601f10612d9f5782800160ff19823516178555612dcc565b82800160010185558215612dcc579182015b82811115612dcc578235825591602001919060010190612db1565b50612dd8929150612ddc565b5090565b5b80821115612dd85760008155600101612ddd565b60008083601f840112612e0357600080fd5b50813567ffffffffffffffff811115612e1b57600080fd5b60208301915083602082850101111561279c57600080fd5b803567ffffffffffffffff81168114612e4b57600080fd5b919050565b6001600160a01b038116811461122b57600080fd5b60008060008060008060808789031215612e7e57600080fd5b863567ffffffffffffffff80821115612e9657600080fd5b612ea28a838b01612df1565b9098509650869150612eb660208a01612e33565b95506040890135915080821115612ecc57600080fd5b50612ed989828a01612df1565b9094509250506060870135612eed81612e50565b809150509295509295509295565b6020810160038310612f1d57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215612f3557600080fd5b813561172681612e50565b600080600080600060808688031215612f5857600080fd5b8535612f6381612e50565b945060208601359350604086013567ffffffffffffffff811115612f8657600080fd5b612f9288828901612df1565b9094509250506060860135612fa681612e50565b809150509295509295909350565b600060208284031215612fc657600080fd5b61172682612e33565b60008060408385031215612fe257600080fd5b8235612fed81612e50565b9150612ffb60208401612e33565b90509250929050565b60005b8381101561301f578181015183820152602001613007565b8381111561302e576000848401525b50505050565b6000815180845261304c816020860160208601613004565b601f01601f19169290920160200192915050565b6020815260006117266020830184613034565b60008083601f84011261308557600080fd5b50813567ffffffffffffffff81111561309d57600080fd5b6020830191508360208260051b850101111561279c57600080fd5b6000806000806000606086880312156130d057600080fd5b85356130db81612e50565b9450602086013567ffffffffffffffff808211156130f857600080fd5b61310489838a01613073565b9096509450604088013591508082111561311d57600080fd5b5061312a88828901613073565b969995985093965092949392505050565b6000806000806040858703121561315157600080fd5b843567ffffffffffffffff8082111561316957600080fd5b61317588838901613073565b9096509450602087013591508082111561318e57600080fd5b5061319b87828801613073565b95989497509550505050565b600080600080606085870312156131bd57600080fd5b84356131c881612e50565b93506131d660208601612e33565b9250604085013567ffffffffffffffff8111156131f257600080fd5b61319b87828801612df1565b600080600080600080600060c0888a03121561321957600080fd5b873561322481612e50565b9650602088013561323481612e50565b95506040880135945061324960608901612e33565b9350608088013567ffffffffffffffff81111561326557600080fd5b6132718a828b01612df1565b90945092505060a088013561328581612e50565b8091505092959891949750929550565b6000806000806000608086880312156132ad57600080fd5b85356132b881612e50565b9450602086013593506132cd60408701612e33565b9250606086013567ffffffffffffffff8111156132e957600080fd5b61312a88828901612df1565b60008060006060848603121561330a57600080fd5b833561331581612e50565b925061332360208501612e33565b9150604084013561333381612e50565b809150509250925092565b60008060006060848603121561335357600080fd5b61335c84612e33565b9250602084013561336c81612e50565b929592945050506040919091013590565b60008060008060006080868803121561339557600080fd5b85356133a081612e50565b94506133ae60208701612e33565b9350604086013567ffffffffffffffff811115612f8657600080fd5b600080604083850312156133dd57600080fd5b6133e683612e33565b946020939093013593505050565b6000806000806080858703121561340a57600080fd5b843561341581612e50565b93506020850135925061342a60408601612e33565b9150606085013561343a81612e50565b939692955090935050565b6000806040838503121561345857600080fd5b61346183612e33565b9150602083013561347181612e50565b809150509250929050565b60008060006040848603121561349157600080fd5b61349a84612e33565b9250602084013567ffffffffffffffff8111156134b657600080fd5b6134c286828701612df1565b9497909650939450505050565b600080600080600080600060a0888a0312156134ea57600080fd5b6134f388612e33565b9650602088013561350381612e50565b9550604088013567ffffffffffffffff8082111561352057600080fd5b61352c8b838c01612df1565b909750955060608a0135945060808a013591508082111561354c57600080fd5b506135598a828b01612df1565b989b979a50959850939692959293505050565b60008060008060008060a0878903121561358557600080fd5b61358e87612e33565b9550602087013561359e81612e50565b945060408701356135ae81612e50565b935060608701359250608087013567ffffffffffffffff8111156135d157600080fd5b6135dd89828a01612df1565b979a9699509497509295939492505050565b600181811c9082168061360357607f821691505b6020821081141561362457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061364657607f831692505b602080841082141561366657634e487b7160e01b86526022600452602486fd5b81801561367a576001811461368b576136b8565b60ff198616895284890196506136b8565b60008a81526020902060005b868110156136b05781548b820152908501908301613697565b505084890196505b509498975050505050505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415613716576137166136ec565b5060010190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038516815267ffffffffffffffff8416602082015260606040820152600061088060608301848661371d565b60006020828403121561378b57600080fd5b815161172681612e50565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156137cf576137cf613796565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156137fe576137fe613796565b604052919050565b600067ffffffffffffffff82111561382057613820613796565b50601f01601f191660200190565b60006020828403121561384057600080fd5b815167ffffffffffffffff81111561385757600080fd5b8201601f8101841361386857600080fd5b805161387b61387682613806565b6137d5565b81815285602083850101111561389057600080fd5b6109a0826020830160208601613004565b6020815260008251608060208401526138bd60a0840182613034565b90506020840151601f19808584030160408601526138db8383613034565b9250604086015160608601526060860151915080858403016080860152506109a08282613034565b60006001600160a01b03808a16835280891660208401525086604083015267ffffffffffffffff8616606083015260c0608083015261394660c08301858761371d565b82810360a08401526139588185613034565b9a9950505050505050505050565b6020815260006001600160a01b03808451166020840152806020850151166040840152506040830151606083015260608301516080808401526139ac60a0840182613034565b949350505050565b6000602082840312156139c657600080fd5b5051919050565b600082198211156139e0576139e06136ec565b500190565b67ffffffffffffffff841681526040602082015260006109a060408301848661371d565b60006020808385031215613a1c57600080fd5b823567ffffffffffffffff80821115613a3457600080fd5b9084019060808287031215613a4857600080fd5b613a506137ac565b8235613a5b81612e50565b815282840135613a6a81612e50565b8185015260408381013590820152606083013582811115613a8a57600080fd5b80840193505086601f840112613a9f57600080fd5b82359150613aaf61387683613806565b8281528785848601011115613ac357600080fd5b82858501868301376000858483010152806060830152508094505050505092915050565b6001600160a01b03841681528260208201526060604082015260006109a06060830184613034565b606081526000613b226060830186613034565b67ffffffffffffffff8516602084015282810360408401526108808185613034565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006109a0606083018461303456fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122073d8d22edc275788496c0029897630f78c1239447f81ecfa683d868dbe42641264736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106102a05760003560e01c80636ef8d66d1161016e5780639e041b9d116100cb578063ed99bf431161007f578063ee91bab811610064578063ee91bab814610760578063f0cb57ce14610773578063f2fde38b1461078657600080fd5b8063ed99bf4314610720578063edea75921461074057600080fd5b8063a1a227fa116100b0578063a1a227fa146106cd578063b2c88775146106ed578063da754f441461070057600080fd5b80639e041b9d1461066c5780639f825f07146106ad57600080fd5b80638da5cb5b1161012257806399d32fc41161010757806399d32fc4146106245780639c1a65bd146106395780639c649fdf1461065957600080fd5b80638da5cb5b146105e657806395b6a1911461060457600080fd5b806380f51c121161015357806380f51c121461058157806382dc1ec4146105b15780638456cb59146105d157600080fd5b80636ef8d66d1461056c5780637cd2bffc1461050757600080fd5b80633f4ba83a1161021c578063583624b7116101d05780635c975abb116101b55780635c975abb1461051a5780635d5b09f2146105395780636b2c0f551461054c57600080fd5b8063583624b7146104e75780635ab7afc61461050757600080fd5b806346fbf68e1161020157806346fbf68e1461046e5780634cc42351146104a7578063547cad12146104c757600080fd5b80633f4ba83a1461043957806343a8c1371461044e57600080fd5b8063151ff4eb116102735780631de13e43116102585780631de13e431461039e57806327cbe705146103cb5780632d5fa47c1461041957600080fd5b8063151ff4eb1461034357806319ab453c1461037e57600080fd5b8063063ce4e5146102a5578063065c38fd146102ce5780630bcb4982146102f05780631140c84e14610303575b600080fd5b6102b86102b3366004612e65565b6107a6565b6040516102c59190612efb565b60405180910390f35b3480156102da57600080fd5b506102ee6102e9366004612f23565b61088a565b005b6102b86102fe366004612f40565b610943565b34801561030f57600080fd5b5061033361031e366004612f23565b60066020526000908152604090205460ff1681565b60405190151581526020016102c5565b34801561034f57600080fd5b5061037061035e366004612fb4565b60036020526000908152604090205481565b6040519081526020016102c5565b34801561038a57600080fd5b506102ee610399366004612f23565b6109a9565b3480156103aa57600080fd5b506103be6103b9366004612fcf565b6109d3565b6040516102c59190613060565b3480156103d757600080fd5b506104016103e6366004612fb4565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016102c5565b34801561042557600080fd5b506102ee6104343660046130b8565b610a78565b34801561044557600080fd5b506102ee610be2565b34801561045a57600080fd5b506102ee61046936600461313b565b610c4b565b34801561047a57600080fd5b50610333610489366004612f23565b6001600160a01b031660009081526002602052604090205460ff1690565b3480156104b357600080fd5b506103be6104c2366004612fb4565b610d50565b3480156104d357600080fd5b506102ee6104e2366004612f23565b610d69565b3480156104f357600080fd5b506102ee6105023660046131a7565b610e0e565b6102b86105153660046131fe565b610ee1565b34801561052657600080fd5b50600154600160a01b900460ff16610333565b6102ee610547366004613295565b610f49565b34801561055857600080fd5b506102ee610567366004612f23565b6111cb565b34801561057857600080fd5b506102ee61122e565b34801561058d57600080fd5b5061033361059c366004612f23565b60026020526000908152604090205460ff1681565b3480156105bd57600080fd5b506102ee6105cc366004612f23565b611237565b3480156105dd57600080fd5b506102ee611297565b3480156105f257600080fd5b506000546001600160a01b0316610401565b34801561061057600080fd5b506102ee61061f3660046132f5565b6112fe565b34801561063057600080fd5b506102ee6113df565b34801561064557600080fd5b5061037061065436600461333e565b611496565b6102b861066736600461337d565b61172d565b34801561067857600080fd5b50610401610687366004612fcf565b60056020908152600092835260408084209091529082529020546001600160a01b031681565b3480156106b957600080fd5b506102ee6106c83660046133ca565b6117df565b3480156106d957600080fd5b50600154610401906001600160a01b031681565b6102ee6106fb3660046133f4565b611890565b34801561070c57600080fd5b506102ee61071b366004613445565b611b10565b34801561072c57600080fd5b506102ee61073b366004612f23565b611bd1565b34801561074c57600080fd5b506102ee61075b36600461347c565b611c7f565b6102ee61076e3660046134cf565b611d2e565b6102ee61078136600461356c565b611e7d565b34801561079257600080fd5b506102ee6107a1366004612f23565b611fcd565b6001546000906001600160a01b031633146108085760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064015b60405180910390fd5b600154600160a01b900460ff1680610865575067ffffffffffffffff8516600090815260076020526040908190209051610842919061362a565b6040518091039020878760405161085a9291906136c6565b604051809103902014155b1561087257506002610880565b61087d8484876120a9565b90505b9695505050505050565b3361089d6000546001600160a01b031690565b6001600160a01b0316146108e15760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b038116600081815260066020908152604091829020805460ff191660019081179091558251938452908301527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf891015b60405180910390a150565b6001546000906001600160a01b031633146109a05760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064016107ff565b95945050505050565b6109b16122d9565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6008602090815260009283526040808420909152908252902080546109f7906135ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610a23906135ef565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b505050505081565b33610a8b6000546001600160a01b031690565b6001600160a01b031614610acf5760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b828114610b1e5760405162461bcd60e51b815260206004820152600f60248201527f6c656e677468206d69736d61746368000000000000000000000000000000000060448201526064016107ff565b60005b83811015610bda57828282818110610b3b57610b3b6136d6565b9050602002016020810190610b509190612f23565b6001600160a01b038716600090815260056020526040812090878785818110610b7b57610b7b6136d6565b9050602002016020810190610b909190612fb4565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905580610bd281613702565b915050610b21565b505050505050565b3360009081526002602052604090205460ff16610c415760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f742070617573657200000000000000000000000060448201526064016107ff565b610c4961233b565b565b33610c5e6000546001600160a01b031690565b6001600160a01b031614610ca25760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b60005b83811015610d4957828282818110610cbf57610cbf6136d6565b9050602002016020810190610cd49190612f23565b60046000878785818110610cea57610cea6136d6565b9050602002016020810190610cff9190612fb4565b67ffffffffffffffff168152602081019190915260400160002080546001600160a01b0319166001600160a01b039290921691909117905580610d4181613702565b915050610ca5565b5050505050565b600760205260009081526040902080546109f7906135ef565b33610d7c6000546001600160a01b031690565b6001600160a01b031614610dc05760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e90602001610938565b33610e216000546001600160a01b031690565b6001600160a01b031614610e655760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b038416600090815260086020908152604080832067ffffffffffffffff871684529091529020610e9d908383612d58565b507f1a8a0120788995f98396f44447190686d4b5978184ca4f9d726d541aed6fb7d684848484604051610ed39493929190613746565b60405180910390a150505050565b6001546000906001600160a01b03163314610f3e5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064016107ff565b979650505050505050565b600154600160a01b900460ff1615610f965760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b6040516331a9108f60e11b8152600481018590526001600160a01b03861690636352211e9060240160206040518083038186803b158015610fd657600080fd5b505afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e9190613779565b6001600160a01b0316336001600160a01b0316146110605760405162461bcd60e51b815260206004820152600f60248201526e3737ba103a37b5b2b71037bbb732b960891b60448201526064016107ff565b60405163c87b56dd60e01b8152600481018590526000906001600160a01b0387169063c87b56dd9060240160006040518083038186803b1580156110a357600080fd5b505afa1580156110b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110df919081019061382e565b90506110eb86866123e1565b6000806110f88887612597565b9150915061117e8287604051806080016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820187905260408083018e90526060909201899052905161116a9291016138a1565b6040516020818303038152906040526127a3565b7f161c0f80e624fd7198682c940eb06e3a33589fef44e083931a0a7908ea1a1a5e338989898989876040516111b99796959493929190613903565b60405180910390a15050505050505050565b336111de6000546001600160a01b031690565b6001600160a01b0316146112225760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b61122b816128fb565b50565b610c49336128fb565b3361124a6000546001600160a01b031690565b6001600160a01b03161461128e5760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b61122b816129b4565b3360009081526002602052604090205460ff166112f65760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f742070617573657200000000000000000000000060448201526064016107ff565b610c49612a71565b336113116000546001600160a01b031690565b6001600160a01b0316146113555760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b03838116600081815260056020908152604080832067ffffffffffffffff88168085529083529281902080546001600160a01b03191695871695861790558051938452908301919091528101919091527fa5a9b84f1b7eb437335ea919a3ff6de6e242e4733d0100a77391106173794871906060015b60405180910390a1505050565b336113f26000546001600160a01b031690565b6001600160a01b0316146114365760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6040514790339082156108fc029083906000818181858888f19350505050158015611465573d6000803e3d6000fd5b506040518181527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e190602001610938565b60405163c87b56dd60e01b81526004810182905260009081906001600160a01b0385169063c87b56dd9060240160006040518083038186803b1580156114db57600080fd5b505afa1580156114ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611517919081019061382e565b6001600160a01b038516600090815260086020908152604080832067ffffffffffffffff8a16845290915281208054929350606092611555906135ef565b80601f0160208091040260200160405190810160405280929190818152602001828054611581906135ef565b80156115ce5780601f106115a3576101008083540402835291602001916115ce565b820191906000526020600020905b8154815290600101906020018083116115b157829003601f168201915b505050505090506000815111156116265760405180608001604052808281526020018281526020018681526020018481525060405160200161161091906138a1565b604051602081830303815290604052915061167b565b6040518060800160405280876001600160a01b03168152602001876001600160a01b03168152602001868152602001848152506040516020016116699190613966565b60405160208183030381529060405291505b67ffffffffffffffff87166000908152600360205260409081902054600154915163299aee5160e11b815290916001600160a01b031690635335dca2906116c6908690600401613060565b60206040518083038186803b1580156116de57600080fd5b505afa1580156116f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171691906139b4565b61172091906139cd565b93505050505b9392505050565b6001546000906001600160a01b0316331461178a5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d657373616765206275730000000000000060448201526064016107ff565b600154600160a01b900460ff16806117c7575067ffffffffffffffff85166000908152600460205260409020546001600160a01b03878116911614155b156117d4575060026109a0565b6108808484876120a9565b336117f26000546001600160a01b031690565b6001600160a01b0316146118365760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b67ffffffffffffffff8216600081815260036020908152604091829020849055815192835282018390527f446a287c2114fa54d0083d97ce8f6f15b2ce29fa1c2df4b5a580d581ea7c4ad391015b60405180910390a15050565b600154600160a01b900460ff16156118dd5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b6040516331a9108f60e11b8152600481018490526001600160a01b03851690636352211e9060240160206040518083038186803b15801561191d57600080fd5b505afa158015611931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119559190613779565b6001600160a01b0316336001600160a01b0316146119a75760405162461bcd60e51b815260206004820152600f60248201526e3737ba103a37b5b2b71037bbb732b960891b60448201526064016107ff565b60405163c87b56dd60e01b8152600481018490526000906001600160a01b0386169063c87b56dd9060240160006040518083038186803b1580156119ea57600080fd5b505afa1580156119fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611a26919081019061382e565b9050611a3285856123e1565b600080611a3f8786612af9565b91509150611a9f82866040518060800160405280886001600160a01b03168152602001856001600160a01b031681526020018a815260200187815250604051602001611a8b9190613966565b604051602081830303815290604052612be8565b604080513381526001600160a01b03898116602083015281830189905267ffffffffffffffff881660608301528681166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a150505050505050565b33611b236000546001600160a01b031690565b6001600160a01b031614611b675760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b67ffffffffffffffff821660008181526004602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f3e776334b24c927645043308f89ac1ca734002e5a921ff384a70dcbb88c92cd49101611884565b33611be46000546001600160a01b031690565b6001600160a01b031614611c285760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b0381166000818152600660209081526040808320805460ff191690558051938452908301919091527f9800fb32bf5eb9a3b2e42c910912da10ed1881dc538475101797669146166bf89101610938565b33611c926000546001600160a01b031690565b6001600160a01b031614611cd65760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b67ffffffffffffffff83166000908152600760205260409020611cfa908383612d58565b507ff00f7a8fa03b713f64d18cad2ad60051000162263e005d5ed22c692f42c4a2eb8383836040516113d2939291906139e5565b600154600160a01b900460ff1615611d7b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b33600080611d89838b612597565b91509150611e2e828b60405180608001604052808c8c8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602080820187905260408083018d90528051601f8c018390048302810183019091528a8152606090920191908b908b9081908401838280828437600092019190915250505091525060405161116a91906020016138a1565b7f161c0f80e624fd7198682c940eb06e3a33589fef44e083931a0a7908ea1a1a5e8984888d8c8c87604051611e699796959493929190613903565b60405180910390a150505050505050505050565b600154600160a01b900460ff1615611eca5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b33600080611ed8838a612af9565b91509150611f58828a60405180608001604052808b6001600160a01b03168152602001856001600160a01b031681526020018a815260200189898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250604051611a8b9190602001613966565b604080516001600160a01b038a81168252858116602083015281830189905267ffffffffffffffff8c1660608301528981166080830152831660a082015290517f40143e5b72b2109d658cfa709dec6213f60364dbd08b7253cdaf5f4e0c49561c9181900360c00190a1505050505050505050565b33611fe06000546001600160a01b031690565b6001600160a01b0316146120245760405162461bcd60e51b81526020600482018190526024820152600080516020613b7783398151915260448201526064016107ff565b6001600160a01b0381166120a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107ff565b61122b81612d08565b6000806120b884860186613a09565b6020808201516001600160a01b031660009081526006909152604090205490915060ff161515600114156121cf576020810151815160408084015190516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b15801561214357600080fd5b505af1925050508015612154575060015b6121ca573d808015612182576040519150601f19603f3d011682016040523d82523d6000602084013e612187565b606091505b507f2c4d9008b1f58a23591c25a813b398a54f438d50b85bedea3d6e7302ee08a810816040516121b79190613060565b60405180910390a1600292505050611726565b612267565b60208101518151604080840151606085015191516333eba6f160e11b81526001600160a01b03909416936367d74de29361220e93909291600401613ae7565b600060405180830381600087803b15801561222857600080fd5b505af1925050508015612239575060015b612267573d808015612182576040519150601f19603f3d011682016040523d82523d6000602084013e612187565b805160208083015160408085015181516001600160a01b03958616815294909216928401929092528282015267ffffffffffffffff85166060830152517f0aac355db06d21352d6b898d8e0ae1334d55f65b6c4c09e26951166a8eb4dba79181900360800190a1506001949350505050565b6000546001600160a01b0316156123325760405162461bcd60e51b815260206004820152601160248201527f6f776e657220616c72656164792073657400000000000000000000000000000060448201526064016107ff565b610c4933612d08565b600154600160a01b900460ff166123945760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016107ff565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821660009081526006602052604090205460ff16151560011415612541576040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401600060405180830381600087803b15801561245557600080fd5b505af1158015612469573d6000803e3d6000fd5b50506040516331a9108f60e11b8152600481018490523092506001600160a01b0385169150636352211e9060240160206040518083038186803b1580156124af57600080fd5b505afa1580156124c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124e79190613779565b6001600160a01b03161461253d5760405162461bcd60e51b815260206004820152601360248201527f7472616e73666572204e4654206661696c65640000000000000000000000000060448201526064016107ff565b5050565b604051630852cd8d60e31b8152600481018290526001600160a01b038316906342966c6890602401600060405180830381600087803b15801561258357600080fd5b505af1158015610bda573d6000803e3d6000fd5b67ffffffffffffffff81166000908152600760205260409020805460609182916125c0906135ef565b80601f01602080910402602001604051908101604052809291908181526020018280546125ec906135ef565b80156126395780601f1061260e57610100808354040283529160200191612639565b820191906000526020600020905b81548152906001019060200180831161261c57829003601f168201915b505050505091508151600014156126925760405162461bcd60e51b815260206004820152601960248201527f64657374204e465420427269646765206e6f7420666f756e640000000000000060448201526064016107ff565b6001600160a01b038416600090815260086020908152604080832067ffffffffffffffff87168452909152902080546126ca906135ef565b80601f01602080910402602001604051908101604052809291908181526020018280546126f6906135ef565b80156127435780601f1061271857610100808354040283529160200191612743565b820191906000526020600020905b81548152906001019060200180831161272657829003601f168201915b5050505050905080516000141561279c5760405162461bcd60e51b815260206004820152601260248201527f64657374204e4654206e6f7420666f756e64000000000000000000000000000060448201526064016107ff565b9250929050565b60015460405163299aee5160e11b81526000916001600160a01b031690635335dca2906127d4908590600401613060565b60206040518083038186803b1580156127ec57600080fd5b505afa158015612800573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282491906139b4565b67ffffffffffffffff841660009081526003602052604090205490915061284b90826139cd565b34101561288d5760405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742066656560801b60448201526064016107ff565b600154604051637d7a101d60e01b81526001600160a01b0390911690637d7a101d9083906128c390889088908890600401613b0f565b6000604051808303818588803b1580156128dc57600080fd5b505af11580156128f0573d6000803e3d6000fd5b505050505050505050565b6001600160a01b03811660009081526002602052604090205460ff166129635760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f7420706175736572000000000000000000000060448201526064016107ff565b6001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e9101610938565b6001600160a01b03811660009081526002602052604090205460ff1615612a1d5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c7265616479207061757365720000000000000060448201526064016107ff565b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f89101610938565b600154600160a01b900460ff1615612abe5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ff565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586123c43390565b67ffffffffffffffff81166000908152600460205260408120546001600160a01b03169081612b6a5760405162461bcd60e51b815260206004820152601960248201527f64657374204e465420427269646765206e6f7420666f756e640000000000000060448201526064016107ff565b506001600160a01b03808416600090815260056020908152604080832067ffffffffffffffff87168452909152902054168061279c5760405162461bcd60e51b815260206004820152601260248201527f64657374204e4654206e6f7420666f756e64000000000000000000000000000060448201526064016107ff565b60015460405163299aee5160e11b81526000916001600160a01b031690635335dca290612c19908590600401613060565b60206040518083038186803b158015612c3157600080fd5b505afa158015612c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6991906139b4565b67ffffffffffffffff8416600090815260036020526040902054909150612c9090826139cd565b341015612cd25760405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742066656560801b60448201526064016107ff565b600154604051634f9e72ad60e11b81526001600160a01b0390911690639f3ce55a9083906128c390889088908890600401613b44565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054612d64906135ef565b90600052602060002090601f016020900481019282612d865760008555612dcc565b82601f10612d9f5782800160ff19823516178555612dcc565b82800160010185558215612dcc579182015b82811115612dcc578235825591602001919060010190612db1565b50612dd8929150612ddc565b5090565b5b80821115612dd85760008155600101612ddd565b60008083601f840112612e0357600080fd5b50813567ffffffffffffffff811115612e1b57600080fd5b60208301915083602082850101111561279c57600080fd5b803567ffffffffffffffff81168114612e4b57600080fd5b919050565b6001600160a01b038116811461122b57600080fd5b60008060008060008060808789031215612e7e57600080fd5b863567ffffffffffffffff80821115612e9657600080fd5b612ea28a838b01612df1565b9098509650869150612eb660208a01612e33565b95506040890135915080821115612ecc57600080fd5b50612ed989828a01612df1565b9094509250506060870135612eed81612e50565b809150509295509295509295565b6020810160038310612f1d57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215612f3557600080fd5b813561172681612e50565b600080600080600060808688031215612f5857600080fd5b8535612f6381612e50565b945060208601359350604086013567ffffffffffffffff811115612f8657600080fd5b612f9288828901612df1565b9094509250506060860135612fa681612e50565b809150509295509295909350565b600060208284031215612fc657600080fd5b61172682612e33565b60008060408385031215612fe257600080fd5b8235612fed81612e50565b9150612ffb60208401612e33565b90509250929050565b60005b8381101561301f578181015183820152602001613007565b8381111561302e576000848401525b50505050565b6000815180845261304c816020860160208601613004565b601f01601f19169290920160200192915050565b6020815260006117266020830184613034565b60008083601f84011261308557600080fd5b50813567ffffffffffffffff81111561309d57600080fd5b6020830191508360208260051b850101111561279c57600080fd5b6000806000806000606086880312156130d057600080fd5b85356130db81612e50565b9450602086013567ffffffffffffffff808211156130f857600080fd5b61310489838a01613073565b9096509450604088013591508082111561311d57600080fd5b5061312a88828901613073565b969995985093965092949392505050565b6000806000806040858703121561315157600080fd5b843567ffffffffffffffff8082111561316957600080fd5b61317588838901613073565b9096509450602087013591508082111561318e57600080fd5b5061319b87828801613073565b95989497509550505050565b600080600080606085870312156131bd57600080fd5b84356131c881612e50565b93506131d660208601612e33565b9250604085013567ffffffffffffffff8111156131f257600080fd5b61319b87828801612df1565b600080600080600080600060c0888a03121561321957600080fd5b873561322481612e50565b9650602088013561323481612e50565b95506040880135945061324960608901612e33565b9350608088013567ffffffffffffffff81111561326557600080fd5b6132718a828b01612df1565b90945092505060a088013561328581612e50565b8091505092959891949750929550565b6000806000806000608086880312156132ad57600080fd5b85356132b881612e50565b9450602086013593506132cd60408701612e33565b9250606086013567ffffffffffffffff8111156132e957600080fd5b61312a88828901612df1565b60008060006060848603121561330a57600080fd5b833561331581612e50565b925061332360208501612e33565b9150604084013561333381612e50565b809150509250925092565b60008060006060848603121561335357600080fd5b61335c84612e33565b9250602084013561336c81612e50565b929592945050506040919091013590565b60008060008060006080868803121561339557600080fd5b85356133a081612e50565b94506133ae60208701612e33565b9350604086013567ffffffffffffffff811115612f8657600080fd5b600080604083850312156133dd57600080fd5b6133e683612e33565b946020939093013593505050565b6000806000806080858703121561340a57600080fd5b843561341581612e50565b93506020850135925061342a60408601612e33565b9150606085013561343a81612e50565b939692955090935050565b6000806040838503121561345857600080fd5b61346183612e33565b9150602083013561347181612e50565b809150509250929050565b60008060006040848603121561349157600080fd5b61349a84612e33565b9250602084013567ffffffffffffffff8111156134b657600080fd5b6134c286828701612df1565b9497909650939450505050565b600080600080600080600060a0888a0312156134ea57600080fd5b6134f388612e33565b9650602088013561350381612e50565b9550604088013567ffffffffffffffff8082111561352057600080fd5b61352c8b838c01612df1565b909750955060608a0135945060808a013591508082111561354c57600080fd5b506135598a828b01612df1565b989b979a50959850939692959293505050565b60008060008060008060a0878903121561358557600080fd5b61358e87612e33565b9550602087013561359e81612e50565b945060408701356135ae81612e50565b935060608701359250608087013567ffffffffffffffff8111156135d157600080fd5b6135dd89828a01612df1565b979a9699509497509295939492505050565b600181811c9082168061360357607f821691505b6020821081141561362457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061364657607f831692505b602080841082141561366657634e487b7160e01b86526022600452602486fd5b81801561367a576001811461368b576136b8565b60ff198616895284890196506136b8565b60008a81526020902060005b868110156136b05781548b820152908501908301613697565b505084890196505b509498975050505050505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415613716576137166136ec565b5060010190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038516815267ffffffffffffffff8416602082015260606040820152600061088060608301848661371d565b60006020828403121561378b57600080fd5b815161172681612e50565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156137cf576137cf613796565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156137fe576137fe613796565b604052919050565b600067ffffffffffffffff82111561382057613820613796565b50601f01601f191660200190565b60006020828403121561384057600080fd5b815167ffffffffffffffff81111561385757600080fd5b8201601f8101841361386857600080fd5b805161387b61387682613806565b6137d5565b81815285602083850101111561389057600080fd5b6109a0826020830160208601613004565b6020815260008251608060208401526138bd60a0840182613034565b90506020840151601f19808584030160408601526138db8383613034565b9250604086015160608601526060860151915080858403016080860152506109a08282613034565b60006001600160a01b03808a16835280891660208401525086604083015267ffffffffffffffff8616606083015260c0608083015261394660c08301858761371d565b82810360a08401526139588185613034565b9a9950505050505050505050565b6020815260006001600160a01b03808451166020840152806020850151166040840152506040830151606083015260608301516080808401526139ac60a0840182613034565b949350505050565b6000602082840312156139c657600080fd5b5051919050565b600082198211156139e0576139e06136ec565b500190565b67ffffffffffffffff841681526040602082015260006109a060408301848661371d565b60006020808385031215613a1c57600080fd5b823567ffffffffffffffff80821115613a3457600080fd5b9084019060808287031215613a4857600080fd5b613a506137ac565b8235613a5b81612e50565b815282840135613a6a81612e50565b8185015260408381013590820152606083013582811115613a8a57600080fd5b80840193505086601f840112613a9f57600080fd5b82359150613aaf61387683613806565b8281528785848601011115613ac357600080fd5b82858501868301376000858483010152806060830152508094505050505092915050565b6001600160a01b03841681528260208201526060604082015260006109a06060830184613034565b606081526000613b226060830186613034565b67ffffffffffffffff8516602084015282810360408401526108808185613034565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006109a0606083018461303456fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122073d8d22edc275788496c0029897630f78c1239447f81ecfa683d868dbe42641264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)": {
        "params": {
          "_amount": "The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.",
          "_executor": "Address who called the MessageBus execution function",
          "_message": "Arbitrary message bytes originated from and encoded by the source app contract",
          "_sender": "The address of the source app contract",
          "_srcChainId": "The source chain ID where the transfer is originated from",
          "_token": "The address of the token that comes out of the bridge"
        }
      },
      "executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)": {
        "params": {
          "_amount": "The amount of tokens received at this contract through the cross-chain bridge.        the contract that implements this contract can safely assume that the tokens will arrive before this        function is called.",
          "_executor": "Address who called the MessageBus execution function",
          "_message": "Arbitrary message bytes originated from and encoded by the source app contract",
          "_sender": "The address of the source app contract",
          "_srcChainId": "The source chain ID where the transfer is originated from",
          "_token": "The address of the token that comes out of the bridge"
        }
      },
      "executeMessageWithTransferRefund(address,uint256,bytes,address)": {
        "params": {
          "_amount": "The amount of the original transfer",
          "_executor": "Address who called the MessageBus execution function",
          "_message": "The same message associated with the original transfer",
          "_token": "The token address of the original transfer"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "sendTo(address,uint256,uint64,address)": {
        "params": {
          "_dstChid": "dest chain ID",
          "_id": "nft token ID to bridge",
          "_nft": "address of source NFT contract",
          "_receiver": "receiver address on dest chain"
        }
      },
      "sendTo(address,uint256,uint64,bytes)": {
        "params": {
          "_dstChid": "dest chain ID",
          "_id": "nft token ID to bridge",
          "_nft": "address of source NFT contract",
          "_receiver": "receiver address on dest chain, arbitrary bytes"
        }
      },
      "totalFee(uint64,address,uint256)": {
        "details": "we assume if dst chain address are bytes, user and nft are same length, otherwise we need to add receiver to args",
        "params": {
          "_dstChid": "dest chain ID",
          "_id": "token ID to bridge (need to get accurate tokenURI length)",
          "_nft": "address of source NFT contract"
        },
        "returns": {
          "_0": "total fee needed for user tx"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "NFT Bridge ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "destBridge(uint64)": {
        "notice": "per dest chain id NFTBridge address"
      },
      "destBridge2(uint64)": {
        "notice": "only for non-evm chains and address can't fit 20bytes"
      },
      "destNFTAddr(address,uint64)": {
        "notice": "first key is NFT address on this chain, 2nd key is dest chain id, value is address on dest chain"
      },
      "destTxFee(uint64)": {
        "notice": "per dest chain id executor fee in this chain's gas token"
      },
      "executeMessageWithTransfer(address,address,uint256,uint64,bytes,address)": {
        "notice": "Called by MessageBus (MessageBusReceiver) if the process is originated from MessageBus (MessageBusSender)'s         sendMessageWithTransfer it is only called when the tokens are checked to be arrived at this contract's address."
      },
      "executeMessageWithTransferFallback(address,address,uint256,uint64,bytes,address)": {
        "notice": "Only called by MessageBus (MessageBusReceiver) if         1. executeMessageWithTransfer reverts, or         2. executeMessageWithTransfer returns ExecutionStatus.Fail"
      },
      "executeMessageWithTransferRefund(address,uint256,bytes,address)": {
        "notice": "Called by MessageBus (MessageBusReceiver) to process refund of the original transfer from this contract"
      },
      "origNFT(address)": {
        "notice": "only set to true if NFT addr on this chain is the orig, so we will use deposit/withdraw instead of burn/mint. not applicable for mcn nft (always burn/mint)"
      },
      "sendTo(address,uint256,uint64,address)": {
        "notice": "locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain"
      },
      "sendTo(address,uint256,uint64,bytes)": {
        "notice": "locks or burn user's NFT in this contract and send message to mint (or withdraw) on dest chain"
      },
      "totalFee(uint64,address,uint256)": {
        "notice": "totalFee returns gas token value to be set in user tx, includes both msg fee and executor fee for dest chain"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25694,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 16761,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "messageBus",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "_paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 25808,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "pausers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15487,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "destTxFee",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint64,t_uint256)"
      },
      {
        "astId": 15492,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "destBridge",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint64,t_address)"
      },
      {
        "astId": 15499,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "destNFTAddr",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint64,t_address))"
      },
      {
        "astId": 15504,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "origNFT",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 15509,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "destBridge2",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint64,t_bytes_storage)"
      },
      {
        "astId": 15515,
        "contract": "contracts/message/apps/nft-bridge/NFTBridge.sol:NFTBridge",
        "label": "destNFTAddr2",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint64,t_bytes_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint64,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint64 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_address)"
      },
      "t_mapping(t_address,t_mapping(t_uint64,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint64 => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint64,t_bytes_storage)"
      },
      "t_mapping(t_uint64,t_address)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint64,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint64,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint64",
        "label": "mapping(uint64 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}