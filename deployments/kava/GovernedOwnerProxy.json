{
  "address": "0xF03928DDc5e5Fa43c7f0cc94aB5adB76D25C79a6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_initializer",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "ChangeProxyAdminProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DrainTokenProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "IncreaseNoticePeriodProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "NotifyResetSignersProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "signers",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "powers",
          "type": "uint256[]"
        }
      ],
      "name": "ResetSignersProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OwnerDataTypes.BridgeType",
          "name": "bridgeType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridgeAddr",
          "type": "address"
        }
      ],
      "name": "SetBridgeAddressProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridgeToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "SetBridgeTokenSwapCapProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "SetGovContractProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxSlashFactor",
          "type": "uint256"
        }
      ],
      "name": "SetMaxSlashFactorProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OwnerDataTypes.MsgFeeType",
          "name": "feeType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "SetMsgFeeProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SetNativeWrapProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usage",
          "type": "uint256"
        }
      ],
      "name": "SetPreExecuteMessageGasUsageProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "SetRewardContractProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "SetWhitelistEnableProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newOwner",
          "type": "uint256"
        }
      ],
      "name": "TransferOwnershipProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridgeAddr",
          "type": "address"
        }
      ],
      "name": "UpdateBridgeProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bridge",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        }
      ],
      "name": "UpdateBridgeSupplyCapProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OwnerDataTypes.Action",
          "name": "action",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateGovernorProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OwnerDataTypes.Action",
          "name": "action",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdatePauserProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OwnerDataTypes.Action",
          "name": "action",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "name": "UpdateSupplyProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum OwnerDataTypes.Action",
          "name": "action",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "UpdateWhitelistedProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "UpgradeAndCallProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "UpgradeProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "UpgradeToAndCallProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "UpgradeToProposalCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "contract SimpleGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract SimpleGovernance",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "initGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "proposeChangeProxyAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "proposeDrainToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_period",
          "type": "uint256"
        }
      ],
      "name": "proposeIncreaseNoticePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        }
      ],
      "name": "proposeNotifyResetSigners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_signers",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_powers",
          "type": "uint256[]"
        }
      ],
      "name": "proposeResetSigners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "enum OwnerDataTypes.BridgeType",
          "name": "_bridgeType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_bridgeAddr",
          "type": "address"
        }
      ],
      "name": "proposeSetBridgeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bridgeToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_swapCap",
          "type": "uint256"
        }
      ],
      "name": "proposeSetBridgeTokenSwapCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "proposeSetGovContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxSlashFactor",
          "type": "uint256"
        }
      ],
      "name": "proposeSetMaxSlashFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "enum OwnerDataTypes.MsgFeeType",
          "name": "_feeType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "proposeSetMsgFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "proposeSetNativeWrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_usage",
          "type": "uint256"
        }
      ],
      "name": "proposeSetPreExecuteMessageGasUsage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "proposeSetRewardContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_enable",
          "type": "bool"
        }
      ],
      "name": "proposeSetWhitelistEnable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newOwner",
          "type": "uint256"
        }
      ],
      "name": "proposeTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bridge",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_cap",
          "type": "uint256"
        }
      ],
      "name": "proposeUpdateBridgeSupplyCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "enum OwnerDataTypes.Action",
          "name": "_action",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "proposeUpdateGovernor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "enum OwnerDataTypes.Action",
          "name": "_action",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "proposeUpdatePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "enum OwnerDataTypes.Action",
          "name": "_action",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        }
      ],
      "name": "proposeUpdateSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "enum OwnerDataTypes.Action",
          "name": "_action",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "proposeUpdateWhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "proposeUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "proposeUpgradeAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        }
      ],
      "name": "proposeUpgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "proposeUpgradeToAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8065f88ba8f38fe4e335050bde5a8f4e29c02425c0831ff2e44835c709665d72",
  "receipt": {
    "to": null,
    "from": "0x108e64Be829981dF9B4a5e526041385F4662Ead2",
    "contractAddress": "0xF03928DDc5e5Fa43c7f0cc94aB5adB76D25C79a6",
    "transactionIndex": 0,
    "gasUsed": "2448291",
    "logsBloom": "0x
    "blockHash": "0xee790e84a71621f8d9ca3b8ca20f2ace1251cd6ca8485559f55a90b0fcdf7118",
    "transactionHash": "0x8065f88ba8f38fe4e335050bde5a8f4e29c02425c0831ff2e44835c709665d72",
    "logs": [],
    "blockNumber": 555824,
    "cumulativeGasUsed": "2448291",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1b9dFC56e38b0F92448659C114e2347Bd803911c"
  ],
  "numDeployments": 2,
  "solcInputHash": "7271e9e763da6a4b7be6e607eb5c194d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initializer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"ChangeProxyAdminProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DrainTokenProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"period\",\"type\":\"uint256\"}],\"name\":\"IncreaseNoticePeriodProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"NotifyResetSignersProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"powers\",\"type\":\"uint256[]\"}],\"name\":\"ResetSignersProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OwnerDataTypes.BridgeType\",\"name\":\"bridgeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridgeAddr\",\"type\":\"address\"}],\"name\":\"SetBridgeAddressProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridgeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"SetBridgeTokenSwapCapProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetGovContractProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSlashFactor\",\"type\":\"uint256\"}],\"name\":\"SetMaxSlashFactorProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OwnerDataTypes.MsgFeeType\",\"name\":\"feeType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetMsgFeeProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SetNativeWrapProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usage\",\"type\":\"uint256\"}],\"name\":\"SetPreExecuteMessageGasUsageProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetRewardContractProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"SetWhitelistEnableProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newOwner\",\"type\":\"uint256\"}],\"name\":\"TransferOwnershipProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridgeAddr\",\"type\":\"address\"}],\"name\":\"UpdateBridgeProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"UpdateBridgeSupplyCapProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"action\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UpdateGovernorProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"action\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UpdatePauserProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"action\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"UpdateSupplyProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"action\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UpdateWhitelistedProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"UpgradeAndCallProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"UpgradeProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"UpgradeToAndCallProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"UpgradeToProposalCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"contract SimpleGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SimpleGovernance\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"initGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"proposeChangeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"proposeDrainToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"name\":\"proposeIncreaseNoticePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"proposeNotifyResetSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_powers\",\"type\":\"uint256[]\"}],\"name\":\"proposeResetSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum OwnerDataTypes.BridgeType\",\"name\":\"_bridgeType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_bridgeAddr\",\"type\":\"address\"}],\"name\":\"proposeSetBridgeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bridgeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_swapCap\",\"type\":\"uint256\"}],\"name\":\"proposeSetBridgeTokenSwapCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"proposeSetGovContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxSlashFactor\",\"type\":\"uint256\"}],\"name\":\"proposeSetMaxSlashFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum OwnerDataTypes.MsgFeeType\",\"name\":\"_feeType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"proposeSetMsgFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"proposeSetNativeWrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usage\",\"type\":\"uint256\"}],\"name\":\"proposeSetPreExecuteMessageGasUsage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"proposeSetRewardContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"proposeSetWhitelistEnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newOwner\",\"type\":\"uint256\"}],\"name\":\"proposeTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cap\",\"type\":\"uint256\"}],\"name\":\"proposeUpdateBridgeSupplyCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"_action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"proposeUpdateGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"_action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"proposeUpdatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"_action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"name\":\"proposeUpdateSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum OwnerDataTypes.Action\",\"name\":\"_action\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"proposeUpdateWhitelisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"proposeUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"proposeUpgradeAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"proposeUpgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"proposeUpgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governed-owner/GovernedOwnerProxy.sol\":\"GovernedOwnerProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/governed-owner/GovernedOwnerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./proxies/CommonOwnerProxy.sol\\\";\\nimport \\\"./proxies/BridgeOwnerProxy.sol\\\";\\nimport \\\"./proxies/MessageOwnerProxy.sol\\\";\\nimport \\\"./proxies/SgnOwnerProxy.sol\\\";\\nimport \\\"./proxies/UpgradeableOwnerProxy.sol\\\";\\n\\ncontract GovernedOwnerProxy is\\n    CommonOwnerProxy,\\n    BridgeOwnerProxy,\\n    MessageOwnerProxy,\\n    SgnOwnerProxy,\\n    UpgradeableOwnerProxy\\n{\\n    constructor(address _initializer) OwnerProxyBase(_initializer) {}\\n}\\n\",\"keccak256\":\"0xb868fa54e4e1cd22d2e58cb37c357f47974a1bd57d41cf2324ddda4330356e8b\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/SimpleGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n// mainly used for governed-owner to do infrequent sgn/cbridge owner operations,\\n// relatively prefer easy-to-use over gas-efficiency\\ncontract SimpleGovernance {\\n    uint256 public constant THRESHOLD_DECIMAL = 100;\\n    uint256 public constant MIN_ACTIVE_PERIOD = 3600; // one hour\\n    uint256 public constant MAX_ACTIVE_PERIOD = 2419200; // four weeks\\n\\n    using SafeERC20 for IERC20;\\n\\n    enum ParamName {\\n        ActivePeriod,\\n        QuorumThreshold, // default threshold for votes to pass\\n        FastPassThreshold // lower threshold for less critical operations\\n    }\\n\\n    enum ProposalType {\\n        ExternalDefault,\\n        ExternalFastPass,\\n        InternalParamChange,\\n        InternalVoterUpdate,\\n        InternalProxyUpdate,\\n        InternalTransferToken\\n    }\\n\\n    mapping(ParamName => uint256) public params;\\n\\n    struct Proposal {\\n        bytes32 dataHash; // hash(proposalType, targetAddress, calldata)\\n        uint256 deadline;\\n        mapping(address => bool) votes;\\n    }\\n\\n    mapping(uint256 => Proposal) public proposals;\\n    uint256 public nextProposalId;\\n\\n    address[] public voters;\\n    mapping(address => uint256) public voterPowers; // voter addr -> voting power\\n\\n    // NOTE: proxies must be audited open-source non-upgradable contracts with following requirements:\\n    // 1. Truthfully pass along tx sender who called the proxy function as the governance proposer.\\n    // 2. Do not allow arbitrary fastpass proposal with calldata constructed by the proxy callers.\\n    // See ./proxies/CommonOwnerProxy.sol for example.\\n    mapping(address => bool) public proposerProxies;\\n\\n    event Initiated(\\n        address[] voters,\\n        uint256[] powers,\\n        address[] proxies,\\n        uint256 activePeriod,\\n        uint256 quorumThreshold,\\n        uint256 fastPassThreshold\\n    );\\n\\n    event ProposalCreated(\\n        uint256 proposalId,\\n        ProposalType proposalType,\\n        address target,\\n        bytes data,\\n        uint256 deadline,\\n        address proposer\\n    );\\n    event ProposalVoted(uint256 proposalId, address voter, bool vote);\\n    event ProposalExecuted(uint256 proposalId);\\n\\n    event ParamChangeProposalCreated(uint256 proposalId, ParamName name, uint256 value);\\n    event VoterUpdateProposalCreated(uint256 proposalId, address[] voters, uint256[] powers);\\n    event ProxyUpdateProposalCreated(uint256 proposalId, address[] addrs, bool[] ops);\\n    event TransferTokenProposalCreated(uint256 proposalId, address receiver, address token, uint256 amount);\\n\\n    constructor(\\n        address[] memory _voters,\\n        uint256[] memory _powers,\\n        address[] memory _proxies,\\n        uint256 _activePeriod,\\n        uint256 _quorumThreshold,\\n        uint256 _fastPassThreshold\\n    ) {\\n        require(_voters.length > 0 && _voters.length == _powers.length, \\\"invalid init voters\\\");\\n        require(_activePeriod <= MAX_ACTIVE_PERIOD && _activePeriod >= MIN_ACTIVE_PERIOD, \\\"invalid active period\\\");\\n        require(\\n            _quorumThreshold < THRESHOLD_DECIMAL && _fastPassThreshold <= _quorumThreshold,\\n            \\\"invalid init thresholds\\\"\\n        );\\n        for (uint256 i = 0; i < _voters.length; i++) {\\n            _setVoter(_voters[i], _powers[i]);\\n        }\\n        for (uint256 i = 0; i < _proxies.length; i++) {\\n            proposerProxies[_proxies[i]] = true;\\n        }\\n        params[ParamName.ActivePeriod] = _activePeriod;\\n        params[ParamName.QuorumThreshold] = _quorumThreshold;\\n        params[ParamName.FastPassThreshold] = _fastPassThreshold;\\n        emit Initiated(_voters, _powers, _proxies, _activePeriod, _quorumThreshold, _fastPassThreshold);\\n    }\\n\\n    /*********************************\\n     * External and Public Functions *\\n     *********************************/\\n\\n    function createProposal(address _target, bytes memory _data) external returns (uint256) {\\n        return _createProposal(msg.sender, _target, _data, ProposalType.ExternalDefault);\\n    }\\n\\n    // create proposal through proxy\\n    function createProposal(\\n        address _proposer,\\n        address _target,\\n        bytes memory _data,\\n        ProposalType _type\\n    ) external returns (uint256) {\\n        require(proposerProxies[msg.sender], \\\"sender is not a valid proxy\\\");\\n        require(_type == ProposalType.ExternalDefault || _type == ProposalType.ExternalFastPass, \\\"invalid type\\\");\\n        return _createProposal(_proposer, _target, _data, _type);\\n    }\\n\\n    function createParamChangeProposal(ParamName _name, uint256 _value) external returns (uint256) {\\n        bytes memory data = abi.encode(_name, _value);\\n        uint256 proposalId = _createProposal(msg.sender, address(0), data, ProposalType.InternalParamChange);\\n        emit ParamChangeProposalCreated(proposalId, _name, _value);\\n        return proposalId;\\n    }\\n\\n    function createVoterUpdateProposal(address[] calldata _voters, uint256[] calldata _powers)\\n        external\\n        returns (uint256)\\n    {\\n        require(_voters.length == _powers.length, \\\"voters and powers length not match\\\");\\n        bytes memory data = abi.encode(_voters, _powers);\\n        uint256 proposalId = _createProposal(msg.sender, address(0), data, ProposalType.InternalVoterUpdate);\\n        emit VoterUpdateProposalCreated(proposalId, _voters, _powers);\\n        return proposalId;\\n    }\\n\\n    function createProxyUpdateProposal(address[] calldata _addrs, bool[] calldata _ops) external returns (uint256) {\\n        require(_addrs.length == _ops.length, \\\"_addrs and _ops length not match\\\");\\n        bytes memory data = abi.encode(_addrs, _ops);\\n        uint256 proposalId = _createProposal(msg.sender, address(0), data, ProposalType.InternalProxyUpdate);\\n        emit ProxyUpdateProposalCreated(proposalId, _addrs, _ops);\\n        return proposalId;\\n    }\\n\\n    function createTransferTokenProposal(\\n        address _receiver,\\n        address _token,\\n        uint256 _amount\\n    ) external returns (uint256) {\\n        bytes memory data = abi.encode(_receiver, _token, _amount);\\n        uint256 proposalId = _createProposal(msg.sender, address(0), data, ProposalType.InternalTransferToken);\\n        emit TransferTokenProposalCreated(proposalId, _receiver, _token, _amount);\\n        return proposalId;\\n    }\\n\\n    function voteProposal(uint256 _proposalId, bool _vote) external {\\n        require(voterPowers[msg.sender] > 0, \\\"invalid voter\\\");\\n        Proposal storage p = proposals[_proposalId];\\n        require(block.timestamp < p.deadline, \\\"deadline passed\\\");\\n        p.votes[msg.sender] = _vote;\\n        emit ProposalVoted(_proposalId, msg.sender, _vote);\\n    }\\n\\n    function executeProposal(\\n        uint256 _proposalId,\\n        ProposalType _type,\\n        address _target,\\n        bytes calldata _data\\n    ) external {\\n        require(voterPowers[msg.sender] > 0, \\\"only voter can execute a proposal\\\");\\n        Proposal storage p = proposals[_proposalId];\\n        require(block.timestamp < p.deadline, \\\"deadline passed\\\");\\n        require(keccak256(abi.encodePacked(_type, _target, _data)) == p.dataHash, \\\"data hash not match\\\");\\n        p.deadline = 0;\\n\\n        p.votes[msg.sender] = true;\\n        (, , bool pass) = countVotes(_proposalId, _type);\\n        require(pass, \\\"not enough votes\\\");\\n\\n        if (_type == ProposalType.ExternalDefault || _type == ProposalType.ExternalFastPass) {\\n            (bool success, bytes memory res) = _target.call(_data);\\n            require(success, _getRevertMsg(res));\\n        } else if (_type == ProposalType.InternalParamChange) {\\n            (ParamName name, uint256 value) = abi.decode((_data), (ParamName, uint256));\\n            params[name] = value;\\n            if (name == ParamName.ActivePeriod) {\\n                require(value <= MAX_ACTIVE_PERIOD && value >= MIN_ACTIVE_PERIOD, \\\"invalid active period\\\");\\n            } else if (name == ParamName.QuorumThreshold || name == ParamName.FastPassThreshold) {\\n                require(\\n                    params[ParamName.QuorumThreshold] >= params[ParamName.FastPassThreshold] &&\\n                        value < THRESHOLD_DECIMAL &&\\n                        value > 0,\\n                    \\\"invalid threshold\\\"\\n                );\\n            }\\n        } else if (_type == ProposalType.InternalVoterUpdate) {\\n            (address[] memory addrs, uint256[] memory powers) = abi.decode((_data), (address[], uint256[]));\\n            for (uint256 i = 0; i < addrs.length; i++) {\\n                if (powers[i] > 0) {\\n                    _setVoter(addrs[i], powers[i]);\\n                } else {\\n                    _removeVoter(addrs[i]);\\n                }\\n            }\\n        } else if (_type == ProposalType.InternalProxyUpdate) {\\n            (address[] memory addrs, bool[] memory ops) = abi.decode((_data), (address[], bool[]));\\n            for (uint256 i = 0; i < addrs.length; i++) {\\n                if (ops[i]) {\\n                    proposerProxies[addrs[i]] = true;\\n                } else {\\n                    delete proposerProxies[addrs[i]];\\n                }\\n            }\\n        } else if (_type == ProposalType.InternalTransferToken) {\\n            (address receiver, address token, uint256 amount) = abi.decode((_data), (address, address, uint256));\\n            _transfer(receiver, token, amount);\\n        }\\n        emit ProposalExecuted(_proposalId);\\n    }\\n\\n    receive() external payable {}\\n\\n    /**************************\\n     *  Public View Functions *\\n     **************************/\\n\\n    function getVoters() public view returns (address[] memory, uint256[] memory) {\\n        address[] memory addrs = new address[](voters.length);\\n        uint256[] memory powers = new uint256[](voters.length);\\n        for (uint32 i = 0; i < voters.length; i++) {\\n            addrs[i] = voters[i];\\n            powers[i] = voterPowers[voters[i]];\\n        }\\n        return (addrs, powers);\\n    }\\n\\n    function getVote(uint256 _proposalId, address _voter) public view returns (bool) {\\n        return proposals[_proposalId].votes[_voter];\\n    }\\n\\n    function countVotes(uint256 _proposalId, ProposalType _type)\\n        public\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            bool\\n        )\\n    {\\n        uint256 yesVotes;\\n        uint256 totalPower;\\n        for (uint32 i = 0; i < voters.length; i++) {\\n            if (getVote(_proposalId, voters[i])) {\\n                yesVotes += voterPowers[voters[i]];\\n            }\\n            totalPower += voterPowers[voters[i]];\\n        }\\n        uint256 threshold;\\n        if (_type == ProposalType.ExternalFastPass) {\\n            threshold = params[ParamName.FastPassThreshold];\\n        } else {\\n            threshold = params[ParamName.QuorumThreshold];\\n        }\\n        bool pass = (yesVotes >= (totalPower * threshold) / THRESHOLD_DECIMAL);\\n        return (totalPower, yesVotes, pass);\\n    }\\n\\n    /**********************************\\n     * Internal and Private Functions *\\n     **********************************/\\n\\n    // create a proposal and vote yes\\n    function _createProposal(\\n        address _proposer,\\n        address _target,\\n        bytes memory _data,\\n        ProposalType _type\\n    ) private returns (uint256) {\\n        require(voterPowers[_proposer] > 0, \\\"only voter can create a proposal\\\");\\n        uint256 proposalId = nextProposalId;\\n        nextProposalId += 1;\\n        Proposal storage p = proposals[proposalId];\\n        p.dataHash = keccak256(abi.encodePacked(_type, _target, _data));\\n        p.deadline = block.timestamp + params[ParamName.ActivePeriod];\\n        p.votes[_proposer] = true;\\n        emit ProposalCreated(proposalId, _type, _target, _data, p.deadline, _proposer);\\n        return proposalId;\\n    }\\n\\n    function _setVoter(address _voter, uint256 _power) private {\\n        require(_power > 0, \\\"zero power\\\");\\n        if (voterPowers[_voter] == 0) {\\n            // add new voter\\n            voters.push(_voter);\\n        }\\n        voterPowers[_voter] = _power;\\n    }\\n\\n    function _removeVoter(address _voter) private {\\n        require(voterPowers[_voter] > 0, \\\"not a voter\\\");\\n        uint256 lastIndex = voters.length - 1;\\n        for (uint256 i = 0; i < voters.length; i++) {\\n            if (voters[i] == _voter) {\\n                if (i < lastIndex) {\\n                    voters[i] = voters[lastIndex];\\n                }\\n                voters.pop();\\n                voterPowers[_voter] = 0;\\n                return;\\n            }\\n        }\\n        revert(\\\"voter not found\\\"); // this should never happen\\n    }\\n\\n    function _transfer(\\n        address _receiver,\\n        address _token,\\n        uint256 _amount\\n    ) private {\\n        if (_token == address(0)) {\\n            (bool sent, ) = _receiver.call{value: _amount, gas: 50000}(\\\"\\\");\\n            require(sent, \\\"failed to send native token\\\");\\n        } else {\\n            IERC20(_token).safeTransfer(_receiver, _amount);\\n        }\\n    }\\n\\n    // https://ethereum.stackexchange.com/a/83577\\n    // https://github.com/Uniswap/v3-periphery/blob/v1.0.0/contracts/base/Multicall.sol\\n    function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {\\n        // If the _res length is less than 68, then the transaction failed silently (without a revert message)\\n        if (_returnData.length < 68) return \\\"Transaction reverted silently\\\";\\n        assembly {\\n            // Slice the sighash.\\n            _returnData := add(_returnData, 0x04)\\n        }\\n        return abi.decode(_returnData, (string)); // All that remains is the revert string\\n    }\\n}\\n\",\"keccak256\":\"0x09dc9156cc57ca6ac474dc2fe30806325b2afa1cb5c29eee6946d7c395b42c29\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/interfaces/IBridgeOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface IBridgeOwner {\\n    // for bridges\\n\\n    function resetSigners(address[] calldata _signers, uint256[] calldata _powers) external;\\n\\n    function notifyResetSigners() external;\\n\\n    function increaseNoticePeriod(uint256 _period) external;\\n\\n    function setWrap(address _token) external;\\n\\n    function setSupply(address _token, uint256 _supply) external;\\n\\n    function increaseSupply(address _token, uint256 _delta) external;\\n\\n    function decreaseSupply(address _token, uint256 _delta) external;\\n\\n    function addGovernor(address _account) external;\\n\\n    function removeGovernor(address _account) external;\\n\\n    // for bridge tokens\\n\\n    function updateBridge(address _bridge) external;\\n\\n    function updateBridgeSupplyCap(address _bridge, uint256 _cap) external;\\n\\n    function setBridgeTokenSwapCap(address _bridgeToken, uint256 _swapCap) external;\\n}\\n\",\"keccak256\":\"0xafbd5a4e51c91a1b33a99620edd037daa4bc10ef07cf08ac1f9b7d5d1c22a1c9\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/interfaces/ICommonOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface ICommonOwner {\\n    function transferOwnership(address _newOwner) external;\\n\\n    function addPauser(address _account) external;\\n\\n    function removePauser(address _account) external;\\n}\\n\",\"keccak256\":\"0x9e7f2a1ceee6c65e02d719178d856070d0fe747251d6c62b6dc411ae4eb21731\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/interfaces/IMessageOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessageOwner {\\n    function setFeePerByte(uint256 _fee) external;\\n\\n    function setFeeBase(uint256 _fee) external;\\n\\n    function setLiquidityBridge(address _addr) external;\\n\\n    function setPegBridge(address _addr) external;\\n\\n    function setPegVault(address _addr) external;\\n\\n    function setPegBridgeV2(address _addr) external;\\n\\n    function setPegVaultV2(address _addr) external;\\n\\n    function setPreExecuteMessageGasUsage(uint256 _usage) external;\\n}\\n\",\"keccak256\":\"0x49df4bfc56c0cde1c11e847252ae4694c0c94d34f5425873a7746c9c124161f9\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/interfaces/ISgnOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface ISgnOwner {\\n    function setWhitelistEnabled(bool _whitelistEnabled) external;\\n\\n    function addWhitelisted(address _account) external;\\n\\n    function removeWhitelisted(address _account) external;\\n\\n    function setGovContract(address _addr) external;\\n\\n    function setRewardContract(address _addr) external;\\n\\n    function setMaxSlashFactor(uint256 _maxSlashFactor) external;\\n}\\n\",\"keccak256\":\"0x5853acf31612f482e3a4bf22f2fdf013443e20d25df66082267bda4f46841915\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/interfaces/IUpgradeableOwner.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\ninterface IUpgradeableOwner {\\n    function changeProxyAdmin(address _proxy, address _newAdmin) external;\\n\\n    function upgrade(address _proxy, address _implementation) external;\\n\\n    function upgradeAndCall(\\n        address _proxy,\\n        address _implementation,\\n        bytes calldata _data\\n    ) external;\\n\\n    function upgradeTo(address _implementation) external;\\n\\n    function upgradeToAndCall(address _implementation, bytes calldata _data) external;\\n}\\n\",\"keccak256\":\"0x5579d1d0e349f4658d2870b7dbcb84612c20132a6e895c9d8eba598c4544aaa6\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/BridgeOwnerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./OwnerProxyBase.sol\\\";\\nimport \\\"../interfaces/IBridgeOwner.sol\\\";\\nimport {SimpleGovernance as sg} from \\\"../SimpleGovernance.sol\\\";\\nimport {OwnerDataTypes as dt} from \\\"./OwnerDataTypes.sol\\\";\\n\\nabstract contract BridgeOwnerProxy is OwnerProxyBase {\\n    // for bridges\\n    event ResetSignersProposalCreated(uint256 proposalId, address target, address[] signers, uint256[] powers);\\n    event NotifyResetSignersProposalCreated(uint256 proposalId, address target);\\n    event IncreaseNoticePeriodProposalCreated(uint256 proposalId, address target, uint256 period);\\n    event SetNativeWrapProposalCreated(uint256 proposalId, address target, address token);\\n    event UpdateSupplyProposalCreated(\\n        uint256 proposalId,\\n        address target,\\n        dt.Action action,\\n        address token,\\n        uint256 supply\\n    );\\n    event UpdateGovernorProposalCreated(uint256 proposalId, address target, dt.Action action, address account);\\n\\n    // for bridge tokens\\n    event UpdateBridgeProposalCreated(uint256 proposalId, address target, address bridgeAddr);\\n    event UpdateBridgeSupplyCapProposalCreated(uint256 proposalId, address target, address bridge, uint256 cap);\\n    event SetBridgeTokenSwapCapProposalCreated(uint256 proposalId, address target, address bridgeToken, uint256 cap);\\n\\n    function proposeResetSigners(\\n        address _target,\\n        address[] calldata _signers,\\n        uint256[] calldata _powers\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(IBridgeOwner.resetSigners.selector, _signers, _powers);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit ResetSignersProposalCreated(proposalId, _target, _signers, _powers);\\n    }\\n\\n    function proposeNotifyResetSigners(address _target) external {\\n        bytes memory data = abi.encodeWithSelector(IBridgeOwner.notifyResetSigners.selector);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalFastPass);\\n        emit NotifyResetSignersProposalCreated(proposalId, _target);\\n    }\\n\\n    function proposeIncreaseNoticePeriod(address _target, uint256 _period) external {\\n        bytes memory data = abi.encodeWithSelector(IBridgeOwner.increaseNoticePeriod.selector, _period);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit IncreaseNoticePeriodProposalCreated(proposalId, _target, _period);\\n    }\\n\\n    function proposeSetNativeWrap(address _target, address _token) external {\\n        bytes memory data = abi.encodeWithSelector(IBridgeOwner.setWrap.selector, _token);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetNativeWrapProposalCreated(proposalId, _target, _token);\\n    }\\n\\n    function proposeUpdateSupply(\\n        address _target,\\n        dt.Action _action,\\n        address _token,\\n        uint256 _supply\\n    ) external {\\n        bytes4 selector;\\n        if (_action == dt.Action.Set) {\\n            selector = IBridgeOwner.setSupply.selector;\\n        } else if (_action == dt.Action.Add) {\\n            selector = IBridgeOwner.increaseSupply.selector;\\n        } else if (_action == dt.Action.Remove) {\\n            selector = IBridgeOwner.decreaseSupply.selector;\\n        } else {\\n            revert(\\\"invalid action\\\");\\n        }\\n        bytes memory data = abi.encodeWithSelector(selector, _token, _supply);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalFastPass);\\n        emit UpdateSupplyProposalCreated(proposalId, _target, _action, _token, _supply);\\n    }\\n\\n    function proposeUpdateGovernor(\\n        address _target,\\n        dt.Action _action,\\n        address _account\\n    ) external {\\n        bytes4 selector;\\n        if (_action == dt.Action.Add) {\\n            selector = IBridgeOwner.addGovernor.selector;\\n        } else if (_action == dt.Action.Remove) {\\n            selector = IBridgeOwner.removeGovernor.selector;\\n        } else {\\n            revert(\\\"invalid action\\\");\\n        }\\n        bytes memory data = abi.encodeWithSelector(selector, _account);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalFastPass);\\n        emit UpdateGovernorProposalCreated(proposalId, _target, _action, _account);\\n    }\\n\\n    function proposeUpdateBridgeSupplyCap(\\n        address _target,\\n        address _bridge,\\n        uint256 _cap\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(IBridgeOwner.updateBridgeSupplyCap.selector, _bridge, _cap);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit UpdateBridgeSupplyCapProposalCreated(proposalId, _target, _bridge, _cap);\\n    }\\n\\n    function proposeSetBridgeTokenSwapCap(\\n        address _target,\\n        address _bridgeToken,\\n        uint256 _swapCap\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(IBridgeOwner.setBridgeTokenSwapCap.selector, _bridgeToken, _swapCap);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetBridgeTokenSwapCapProposalCreated(proposalId, _target, _bridgeToken, _swapCap);\\n    }\\n}\\n\",\"keccak256\":\"0xd54d9d134b1da6ca1dc71a989afd2895171de5098710e140c6c64621f51a5245\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/CommonOwnerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./OwnerProxyBase.sol\\\";\\nimport \\\"../interfaces/ICommonOwner.sol\\\";\\nimport {SimpleGovernance as sg} from \\\"../SimpleGovernance.sol\\\";\\nimport {OwnerDataTypes as dt} from \\\"./OwnerDataTypes.sol\\\";\\n\\nabstract contract CommonOwnerProxy is OwnerProxyBase {\\n    event TransferOwnershipProposalCreated(uint256 proposalId, address target, uint256 newOwner);\\n    event UpdatePauserProposalCreated(uint256 proposalId, address target, dt.Action action, address account);\\n\\n    function proposeTransferOwnership(address _target, uint256 _newOwner) external {\\n        bytes memory data = abi.encodeWithSelector(ICommonOwner.transferOwnership.selector, _newOwner);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit TransferOwnershipProposalCreated(proposalId, _target, _newOwner);\\n    }\\n\\n    function proposeUpdatePauser(\\n        address _target,\\n        dt.Action _action,\\n        address _account\\n    ) external {\\n        bytes4 selector;\\n        if (_action == dt.Action.Add) {\\n            selector = ICommonOwner.addPauser.selector;\\n        } else if (_action == dt.Action.Remove) {\\n            selector = ICommonOwner.removePauser.selector;\\n        } else {\\n            revert(\\\"invalid action\\\");\\n        }\\n        bytes memory data = abi.encodeWithSelector(selector, _account);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalFastPass);\\n        emit UpdatePauserProposalCreated(proposalId, _target, _action, _account);\\n    }\\n}\\n\",\"keccak256\":\"0x63998ea690992826fbb2ffe5246ed946919304ab2c5eecf28e63495d59e72ff6\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/MessageOwnerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./OwnerProxyBase.sol\\\";\\nimport \\\"../interfaces/IMessageOwner.sol\\\";\\nimport {SimpleGovernance as sg} from \\\"../SimpleGovernance.sol\\\";\\nimport {OwnerDataTypes as dt} from \\\"./OwnerDataTypes.sol\\\";\\n\\nabstract contract MessageOwnerProxy is OwnerProxyBase {\\n    event SetMsgFeeProposalCreated(uint256 proposalId, address target, dt.MsgFeeType feeType, uint256 fee);\\n    event SetBridgeAddressProposalCreated(\\n        uint256 proposalId,\\n        address target,\\n        dt.BridgeType bridgeType,\\n        address bridgeAddr\\n    );\\n    event SetPreExecuteMessageGasUsageProposalCreated(uint256 proposalId, address target, uint256 usage);\\n\\n    function proposeSetMsgFee(\\n        address _target,\\n        dt.MsgFeeType _feeType,\\n        uint256 _fee\\n    ) external {\\n        bytes4 selector;\\n        if (_feeType == dt.MsgFeeType.PerByte) {\\n            selector = IMessageOwner.setFeePerByte.selector;\\n        } else if (_feeType == dt.MsgFeeType.Base) {\\n            selector = IMessageOwner.setFeeBase.selector;\\n        } else {\\n            revert(\\\"invalid fee type\\\");\\n        }\\n        bytes memory data = abi.encodeWithSelector(selector, _fee);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalFastPass);\\n        emit SetMsgFeeProposalCreated(proposalId, _target, _feeType, _fee);\\n    }\\n\\n    function proposeSetBridgeAddress(\\n        address _target,\\n        dt.BridgeType _bridgeType,\\n        address _bridgeAddr\\n    ) external {\\n        bytes4 selector;\\n        if (_bridgeType == dt.BridgeType.Liquidity) {\\n            selector = IMessageOwner.setLiquidityBridge.selector;\\n        } else if (_bridgeType == dt.BridgeType.PegBridge) {\\n            selector = IMessageOwner.setPegBridge.selector;\\n        } else if (_bridgeType == dt.BridgeType.PegVault) {\\n            selector = IMessageOwner.setPegVault.selector;\\n        } else if (_bridgeType == dt.BridgeType.PegBridgeV2) {\\n            selector = IMessageOwner.setPegBridgeV2.selector;\\n        } else if (_bridgeType == dt.BridgeType.PegVaultV2) {\\n            selector = IMessageOwner.setPegVaultV2.selector;\\n        } else {\\n            revert(\\\"invalid bridge type\\\");\\n        }\\n        bytes memory data = abi.encodeWithSelector(selector, _bridgeAddr);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetBridgeAddressProposalCreated(proposalId, _target, _bridgeType, _bridgeAddr);\\n    }\\n\\n    function proposeSetPreExecuteMessageGasUsage(address _target, uint256 _usage) external {\\n        bytes memory data = abi.encodeWithSelector(IMessageOwner.setPreExecuteMessageGasUsage.selector, _usage);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetPreExecuteMessageGasUsageProposalCreated(proposalId, _target, _usage);\\n    }\\n}\\n\",\"keccak256\":\"0xdbb799d7a796befe59a04fc1883c6c6b91bca81d96f11eeff33a7cf97c542b3e\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/OwnerDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nlibrary OwnerDataTypes {\\n    enum Action {\\n        Set,\\n        Add,\\n        Remove\\n    }\\n\\n    enum MsgFeeType {\\n        PerByte,\\n        Base\\n    }\\n\\n    enum BridgeType {\\n        Liquidity,\\n        PegBridge,\\n        PegVault,\\n        PegBridgeV2,\\n        PegVaultV2\\n    }\\n}\\n\",\"keccak256\":\"0xbe5b9c34359a61e0c2e6b0cae254ddd118589b905ba3815df5742d195ae4e64c\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/OwnerProxyBase.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../SimpleGovernance.sol\\\";\\n\\nabstract contract OwnerProxyBase {\\n    SimpleGovernance public gov;\\n    address private initializer;\\n\\n    constructor(address _initializer) {\\n        initializer = _initializer;\\n    }\\n\\n    function initGov(SimpleGovernance _gov) public {\\n        require(msg.sender == initializer, \\\"only initializer can init\\\");\\n        require(address(gov) == address(0), \\\"gov addr already set\\\");\\n        gov = _gov;\\n    }\\n}\\n\",\"keccak256\":\"0xe2c821c7be971423f5cd63312c85428bc09310b24543861785dbfbb14c531203\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/SgnOwnerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./OwnerProxyBase.sol\\\";\\nimport \\\"../interfaces/ISgnOwner.sol\\\";\\nimport {SimpleGovernance as sg} from \\\"../SimpleGovernance.sol\\\";\\nimport {OwnerDataTypes as dt} from \\\"./OwnerDataTypes.sol\\\";\\n\\nabstract contract SgnOwnerProxy is OwnerProxyBase {\\n    event SetWhitelistEnableProposalCreated(uint256 proposalId, address target, bool enabled);\\n    event UpdateWhitelistedProposalCreated(uint256 proposalId, address target, dt.Action action, address account);\\n    event SetGovContractProposalCreated(uint256 proposalId, address target, address addr);\\n    event SetRewardContractProposalCreated(uint256 proposalId, address target, address addr);\\n    event SetMaxSlashFactorProposalCreated(uint256 proposalId, address target, uint256 maxSlashFactor);\\n    event DrainTokenProposalCreated(uint256 proposalId, address target, address token, uint256 amount);\\n\\n    function proposeSetWhitelistEnable(address _target, bool _enable) external {\\n        bytes memory data = abi.encodeWithSelector(ISgnOwner.setWhitelistEnabled.selector, _enable);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetWhitelistEnableProposalCreated(proposalId, _target, _enable);\\n    }\\n\\n    function proposeUpdateWhitelisted(\\n        address _target,\\n        dt.Action _action,\\n        address _account\\n    ) external {\\n        bytes4 selector;\\n        if (_action == dt.Action.Add) {\\n            selector = ISgnOwner.addWhitelisted.selector;\\n        } else if (_action == dt.Action.Remove) {\\n            selector = ISgnOwner.removeWhitelisted.selector;\\n        } else {\\n            revert(\\\"invalid action\\\");\\n        }\\n        bytes memory data = abi.encodeWithSelector(selector, _account);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalFastPass);\\n        emit UpdateWhitelistedProposalCreated(proposalId, _target, _action, _account);\\n    }\\n\\n    function proposeSetGovContract(address _target, address _addr) external {\\n        bytes memory data = abi.encodeWithSelector(ISgnOwner.setGovContract.selector, _addr);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetGovContractProposalCreated(proposalId, _target, _addr);\\n    }\\n\\n    function proposeSetRewardContract(address _target, address _addr) external {\\n        bytes memory data = abi.encodeWithSelector(ISgnOwner.setRewardContract.selector, _addr);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetRewardContractProposalCreated(proposalId, _target, _addr);\\n    }\\n\\n    function proposeSetMaxSlashFactor(address _target, uint256 _maxSlashFactor) external {\\n        bytes memory data = abi.encodeWithSelector(ISgnOwner.setMaxSlashFactor.selector, _maxSlashFactor);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit SetMaxSlashFactorProposalCreated(proposalId, _target, _maxSlashFactor);\\n    }\\n\\n    function proposeDrainToken(\\n        address _target,\\n        address _token,\\n        uint256 _amount\\n    ) external {\\n        bytes memory data;\\n        if (_token == address(0)) {\\n            data = abi.encodeWithSelector(bytes4(keccak256(bytes(\\\"drainToken(uint256\\\"))), _amount);\\n        } else {\\n            data = abi.encodeWithSelector(bytes4(keccak256(bytes(\\\"drainToken(address,uint256\\\"))), _token, _amount);\\n        }\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit DrainTokenProposalCreated(proposalId, _target, _token, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x70b10407da394301cbbc5503d95de3d5d39afafeb4eee243f73a9523f5803bd1\",\"license\":\"GPL-3.0-only\"},\"contracts/governed-owner/proxies/UpgradeableOwnerProxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity ^0.8.9;\\n\\nimport \\\"./OwnerProxyBase.sol\\\";\\nimport \\\"../interfaces/IUpgradeableOwner.sol\\\";\\nimport {SimpleGovernance as sg} from \\\"../SimpleGovernance.sol\\\";\\nimport {OwnerDataTypes as dt} from \\\"./OwnerDataTypes.sol\\\";\\n\\nabstract contract UpgradeableOwnerProxy is OwnerProxyBase {\\n    event ChangeProxyAdminProposalCreated(uint256 proposalId, address target, address proxy, address newAdmin);\\n    event UpgradeProposalCreated(uint256 proposalId, address target, address proxy, address implementation);\\n    event UpgradeAndCallProposalCreated(\\n        uint256 proposalId,\\n        address target,\\n        address proxy,\\n        address implementation,\\n        bytes data\\n    );\\n    event UpgradeToProposalCreated(uint256 proposalId, address target, address implementation);\\n    event UpgradeToAndCallProposalCreated(uint256 proposalId, address target, address implementation, bytes data);\\n\\n    function proposeChangeProxyAdmin(\\n        address _target,\\n        address _proxy,\\n        address _newAdmin\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(IUpgradeableOwner.changeProxyAdmin.selector, _proxy, _newAdmin);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit ChangeProxyAdminProposalCreated(proposalId, _target, _proxy, _newAdmin);\\n    }\\n\\n    function proposeUpgrade(\\n        address _target,\\n        address _proxy,\\n        address _implementation\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(IUpgradeableOwner.upgrade.selector, _proxy, _implementation);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit UpgradeProposalCreated(proposalId, _target, _proxy, _implementation);\\n    }\\n\\n    function proposeUpgradeAndCall(\\n        address _target,\\n        address _proxy,\\n        address _implementation,\\n        bytes calldata _data\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(\\n            IUpgradeableOwner.upgradeAndCall.selector,\\n            _proxy,\\n            _implementation,\\n            _data\\n        );\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit UpgradeAndCallProposalCreated(proposalId, _target, _proxy, _implementation, _data);\\n    }\\n\\n    function proposeUpgradeTo(address _target, address _implementation) external {\\n        bytes memory data = abi.encodeWithSelector(IUpgradeableOwner.upgradeTo.selector, _implementation);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit UpgradeToProposalCreated(proposalId, _target, _implementation);\\n    }\\n\\n    function proposeUpgradeToAndCall(\\n        address _target,\\n        address _implementation,\\n        bytes calldata _data\\n    ) external {\\n        bytes memory data = abi.encodeWithSelector(IUpgradeableOwner.upgradeToAndCall.selector, _implementation, _data);\\n        uint256 proposalId = gov.createProposal(msg.sender, _target, data, sg.ProposalType.ExternalDefault);\\n        emit UpgradeToAndCallProposalCreated(proposalId, _target, _implementation, _data);\\n    }\\n}\\n\",\"keccak256\":\"0x7000483ac34fbd1d42d6ddb2a3d4ac887e4f62899c04d958944136d2eba7a74a\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002b8338038062002b8383398101604081905262000034916200005a565b600180546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b612ae7806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c806377e96d21116100ee578063a71ac5f011610097578063adf43efb11610071578063adf43efb14610372578063bcf612fc14610385578063d19bf98b14610398578063dc797ce3146103ab57600080fd5b8063a71ac5f014610339578063a9ed9d161461034c578063aa9f79431461035f57600080fd5b806382887e02116100c857806382887e02146103005780639f492e7c14610313578063a2ac8d861461032657600080fd5b806377e96d21146102c757806378a4f076146102da5780637f1f1990146102ed57600080fd5b8063224468a81161015b57806339acf6951161013557806339acf6951461027b57806339f2b6511461028e578063656fe066146102a15780636a5c9358146102b457600080fd5b8063224468a8146102425780632ef754af1461025557806338cd4d091461026857600080fd5b8063173a06f91161018c578063173a06f9146102095780631a6ca6da1461021c5780631de8a0161461022f57600080fd5b8062395f11146101b25780630de54802146101c757806312d43a51146101da575b600080fd5b6101c56101c03660046122c4565b6103be565b005b6101c56101d53660046122f0565b6104d4565b6000546101ed906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6101c5610217366004612375565b6105e7565b6101c561022a3660046122f0565b610710565b6101c561023d3660046123f8565b610823565b6101c56102503660046122f0565b610952565b6101c5610263366004612457565b610a65565b6101c56102763660046122c4565b610c32565b6101c56102893660046124e8565b610d3e565b6101c561029c3660046122c4565b610e62565b6101c56102af36600461254d565b610f6e565b6101c56102c23660046122c4565b611111565b6101c56102d5366004612592565b61121d565b6101c56102e83660046125c2565b61133b565b6101c56102fb3660046125f0565b611497565b6101c561030e366004612624565b6116b5565b6101c56103213660046125c2565b6117c9565b6101c5610334366004612657565b611925565b6101c561034736600461267b565b611a22565b6101c561035a366004612657565b611b3a565b6101c561036d3660046123f8565b611c27565b6101c56103803660046125c2565b611d4b565b6101c56103933660046122f0565b611ea7565b6101c56103a6366004612592565b611fba565b6101c56103b9366004612592565b61218e565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b0316631a20325760e01b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd4802749061042f903390889087908790600401612710565b602060405180830381600087803b15801561044957600080fd5b505af115801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190612790565b604080518281526001600160a01b03871660208201529081018590529091507f170cfbd4ca14e4c07750912ad957e666499c81fdfef63021cde154c6ffaac2d7906060015b60405180910390a150505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316631a1c1b9560e21b179052600080549351633f52009d60e21b81529293909291169063fd48027490610548903390889087908790600401612710565b602060405180830381600087803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f0440d8b8371306b54b33893631962ccab8e82436d91eb4a2c481454cc2ed4781906060016104c6565b600063a7bdf45a60e01b858585856040516024016106089493929190612841565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd480274906106729033908b9087908790600401612710565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190612790565b90507f4c42642dbb775b1ef06ad1492581510de04ccfb5ad078338d6ae369b56f356a08188888888886040516106ff96959493929190612873565b60405180910390a150505050505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316631b2ce7f360e11b179052600080549351633f52009d60e21b81529293909291169063fd48027490610784903390889087908790600401612710565b602060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f322efec8297181586148e7711ed39e230b706795edf152fd4e3a3a8fc009d33b906060016104c6565b604080516001600160a01b03848116602483015283811660448084019190915283518084039091018152606490920183526020820180516001600160e01b0316633f7f93af60e11b179052600080549351633f52009d60e21b81529293909291169063fd4802749061089f903390899087908790600401612710565b602060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190612790565b604080518281526001600160a01b0380891660208301528088169282019290925290851660608201529091507f892ed68a932643ffae382937ae40947f858726f5014c80e6612255d981508090906080015b60405180910390a15050505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316634ffc800d60e11b179052600080549351633f52009d60e21b81529293909291169063fd480274906109c6903390889087908790600401612710565b602060405180830381600087803b1580156109e057600080fd5b505af11580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a189190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f0691c48365957fae1547e6922078da4127a4ec5beedd4aca7b80a5c793722556906060016104c6565b600080846002811115610a7a57610a7a6126e6565b1415610a8e5750632d3633b760e21b610b2b565b6001846002811115610aa257610aa26126e6565b1415610ab65750633cfe6c7760e11b610b2b565b6002846002811115610aca57610aca6126e6565b1415610ade575063057425d760e21b610b2b565b60405162461bcd60e51b815260206004820152600e60248201527f696e76616c696420616374696f6e00000000000000000000000000000000000060448201526064015b60405180910390fd5b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b03166001600160e01b03198616179052600080549351633f52009d60e21b81529293909291169063fd48027490610ba79033908b908790600190600401612710565b602060405180830381600087803b158015610bc157600080fd5b505af1158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190612790565b90507f68a1245119792f0c0b4396c9d85ed7e432c53279527235d14c64bc4e801d2bb081888888886040516106ff9594939291906128cc565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b0316634586f33160e01b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd48027490610ca3903390889087908790600401612710565b602060405180830381600087803b158015610cbd57600080fd5b505af1158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190612790565b604080518281526001600160a01b03871660208201529081018590529091507fa140c5e7d56a62eaaaa3aeb3b9d49c5fc85004d8d25920be0bce5e08a0b7ec9b906060016104c6565b6000634f1ef28660e01b848484604051602401610d5d9392919061292e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd48027490610dc79033908a9087908790600401612710565b602060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e199190612790565b90507f7936bef0e4e9424795215dbcddd145b5f6ccbe6d35ed9ceacc3c9cec1b1a1ed18187878787604051610e52959493929190612951565b60405180910390a1505050505050565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b0316637906491560e11b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd48027490610ed3903390889087908790600401612710565b602060405180830381600087803b158015610eed57600080fd5b505af1158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190612790565b604080518281526001600160a01b03871660208201529081018590529091507f27cc981a956034897b297d307eaa4e907654717913a238daf3e32a5bd0e18aea906060016104c6565b600080836001811115610f8357610f836126e6565b1415610f97575063e2c1ed2560e01b611007565b6001836001811115610fab57610fab6126e6565b1415610fbf575063036145eb60e11b611007565b60405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206665652074797065000000000000000000000000000000006044820152606401610b22565b6000818360405160240161101d91815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd480274906110889033908a908790600190600401612710565b602060405180830381600087803b1580156110a257600080fd5b505af11580156110b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110da9190612790565b90507f924ed1dc9162d297ef826f4eb457b22796e62033fea2fb6f201c13661d04c64181878787604051610e529493929190612984565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b031663f2fde38b60e01b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd48027490611182903390889087908790600401612710565b602060405180830381600087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190612790565b604080518281526001600160a01b03871660208201529081018590529091507f2e7f126e99465c6c540098e0eca13d2fc8d71908debbf31d908bee17e2866d0c906060016104c6565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663cd04611960e01b179052600080549351633f52009d60e21b81529293909291169063fd48027490611295903390899087908790600401612710565b602060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e79190612790565b604080518281526001600160a01b038089166020830152871691810191909152606081018590529091507fbbf294b7b2aadbd73c0198ccea847bbc640871eb1ad2a0b01ac080d077f088e790608001610943565b60006001836002811115611351576113516126e6565b141561136557506320b707b160e21b611389565b6002836002811115611379576113796126e6565b1415610ade5750636b2c0f5560e01b5b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd4802749061140e9033908a908790600190600401612710565b602060405180830381600087803b15801561142857600080fd5b505af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114609190612790565b90507f9fe02e73a05d9dc9d3f3cb9423f6531a055a6083c43978dc2b64d6e505e4366581878787604051610e5294939291906129bc565b6000808360048111156114ac576114ac6126e6565b14156114c0575063588be02b60e01b6115a8565b60018360048111156114d4576114d46126e6565b14156114e857506301e5ff3360e11b6115a8565b60028360048111156114fc576114fc6126e6565b14156115105750639b05a77560e01b6115a8565b6003836004811115611524576115246126e6565b14156115385750634177ea8160e11b6115a8565b600483600481111561154c5761154c6126e6565b1415611560575063f83b0fb960e01b6115a8565b60405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206272696467652074797065000000000000000000000000006044820152606401610b22565b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd4802749061162c9033908a9087908790600401612710565b602060405180830381600087803b15801561164657600080fd5b505af115801561165a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167e9190612790565b90507f1605f3e8c96ab34dc0790b6937e2f0c59bb340db6e689a77bc500789d32314f881878787604051610e5294939291906129f3565b6040805182151560248083019190915282518083039091018152604490910182526020810180516001600160e01b0316630296cf3f60e11b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd4802749061172a903390889087908790600401612710565b602060405180830381600087803b15801561174457600080fd5b505af1158015611758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177c9190612790565b604080518281526001600160a01b0387166020820152851515918101919091529091507fb415e98e9740cf326dbeb0b43f0fa7d742ab13c6c2fc4e0042b6289cca074526906060016104c6565b600060018360028111156117df576117df6126e6565b14156117f357506310154bad60e01b611817565b6002836002811115611807576118076126e6565b1415610ade575063291d954960e01b5b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd4802749061189c9033908a908790600190600401612710565b602060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190612790565b90507f4336c9be2e5abfad187a39a7f7346158c644f54824688bb5a5b335f9306fb9bb81878787604051610e5294939291906129bc565b6040805160048082526024820183526020820180516001600160e01b03166325c38b9f60e01b179052600080549351633f52009d60e21b8152929390926001600160a01b039091169163fd480274916119879133918891889160019101612710565b602060405180830381600087803b1580156119a157600080fd5b505af11580156119b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d99190612790565b604080518281526001600160a01b03861660208201529192507f149a32d950b4bc0cb34725d5a842addc6f3e428807357a578301e078cc644357910160405180910390a1505050565b6000639623609d60e01b85858585604051602401611a439493929190612a33565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd48027490611aad9033908b9087908790600401612710565b602060405180830381600087803b158015611ac757600080fd5b505af1158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190612790565b90507ff6b46465ce70c6b53ccde6e33cdd45c1906ded1e8553ff64ebdadf97d3ac29518188888888886040516106ff96959493929190612a6a565b6001546001600160a01b03163314611b945760405162461bcd60e51b815260206004820152601960248201527f6f6e6c7920696e697469616c697a65722063616e20696e6974000000000000006044820152606401610b22565b6000546001600160a01b031615611bed5760405162461bcd60e51b815260206004820152601460248201527f676f76206164647220616c7265616479207365740000000000000000000000006044820152606401610b22565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b604080516001600160a01b03848116602483015283811660448084019190915283518084039091018152606490920183526020820180516001600160e01b031663266a23b160e21b179052600080549351633f52009d60e21b81529293909291169063fd48027490611ca3903390899087908790600401612710565b602060405180830381600087803b158015611cbd57600080fd5b505af1158015611cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf59190612790565b604080518281526001600160a01b0380891660208301528088169282019290925290851660608201529091507fc1dead51ac2e9fa286784eeefebacaf915332934c6d6fd290ec2c8de51c7863290608001610943565b60006001836002811115611d6157611d616126e6565b1415611d7557506303c4a25d60e41b611d99565b6002836002811115611d8957611d896126e6565b1415610ade5750631dd9b59160e31b5b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd48027490611e1e9033908a908790600190600401612710565b602060405180830381600087803b158015611e3857600080fd5b505af1158015611e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e709190612790565b90507f725ab9c9498b34fa1336448b0dc8dfb419461e03707ace510d44e8bb63d8485181878787604051610e5294939291906129bc565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166328a8478560e11b179052600080549351633f52009d60e21b81529293909291169063fd48027490611f1b903390889087908790600401612710565b602060405180830381600087803b158015611f3557600080fd5b505af1158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d9190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f8aaee1ae0ee9b8019d672115e172cd8fd03686f0f117ce65aa0ed224ca6d12b3906060016104c6565b60606001600160a01b0383166120385750604080518082018252601281527f647261696e546f6b656e2875696e74323536000000000000000000000000000060209182015281516024808201859052835180830390910181526044909101909252810180516001600160e01b031663a76cd1bb60e01b1790526120b1565b50604080518082018252601a81527f647261696e546f6b656e28616464726573732c75696e7432353600000000000060209182015281516001600160a01b03851660248201526044808201859052835180830390910181526064909101909252810180516001600160e01b0316634dd256db60e11b1790525b60008054604051633f52009d60e21b81526001600160a01b039091169063fd480274906120e8903390899087908790600401612710565b602060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213a9190612790565b604080518281526001600160a01b038089166020830152871691810191909152606081018590529091507f07315b20d3a4862680a34cedf6a8b62bd45bdf98fa602f664417d8a84d47c1bc90608001610943565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03166326717b8d60e11b179052600080549351633f52009d60e21b81529293909291169063fd48027490612206903390899087908790600401612710565b602060405180830381600087803b15801561222057600080fd5b505af1158015612234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122589190612790565b604080518281526001600160a01b038089166020830152871691810191909152606081018590529091507fdf93094bf7ed4f11758b798f8463ab250ae3db9edc392c26b92443f3cf73100490608001610943565b6001600160a01b03811681146122c157600080fd5b50565b600080604083850312156122d757600080fd5b82356122e2816122ac565b946020939093013593505050565b6000806040838503121561230357600080fd5b823561230e816122ac565b9150602083013561231e816122ac565b809150509250929050565b60008083601f84011261233b57600080fd5b50813567ffffffffffffffff81111561235357600080fd5b6020830191508360208260051b850101111561236e57600080fd5b9250929050565b60008060008060006060868803121561238d57600080fd5b8535612398816122ac565b9450602086013567ffffffffffffffff808211156123b557600080fd5b6123c189838a01612329565b909650945060408801359150808211156123da57600080fd5b506123e788828901612329565b969995985093965092949392505050565b60008060006060848603121561240d57600080fd5b8335612418816122ac565b92506020840135612428816122ac565b91506040840135612438816122ac565b809150509250925092565b80356003811061245257600080fd5b919050565b6000806000806080858703121561246d57600080fd5b8435612478816122ac565b935061248660208601612443565b92506040850135612496816122ac565b9396929550929360600135925050565b60008083601f8401126124b857600080fd5b50813567ffffffffffffffff8111156124d057600080fd5b60208301915083602082850101111561236e57600080fd5b600080600080606085870312156124fe57600080fd5b8435612509816122ac565b93506020850135612519816122ac565b9250604085013567ffffffffffffffff81111561253557600080fd5b612541878288016124a6565b95989497509550505050565b60008060006060848603121561256257600080fd5b833561256d816122ac565b925060208401356002811061258157600080fd5b929592945050506040919091013590565b6000806000606084860312156125a757600080fd5b83356125b2816122ac565b92506020840135612581816122ac565b6000806000606084860312156125d757600080fd5b83356125e2816122ac565b925061242860208501612443565b60008060006060848603121561260557600080fd5b8335612610816122ac565b925060208401356005811061242857600080fd5b6000806040838503121561263757600080fd5b8235612642816122ac565b91506020830135801515811461231e57600080fd5b60006020828403121561266957600080fd5b8135612674816122ac565b9392505050565b60008060008060006080868803121561269357600080fd5b853561269e816122ac565b945060208601356126ae816122ac565b935060408601356126be816122ac565b9250606086013567ffffffffffffffff8111156126da57600080fd5b6123e7888289016124a6565b634e487b7160e01b600052602160045260246000fd5b6006811061270c5761270c6126e6565b9052565b60006001600160a01b038087168352602081871681850152608060408501528551915081608085015260005b828110156127585786810182015185820160a00152810161273c565b8281111561276a57600060a084870101525b5050601f01601f1916820160a001905061278760608301846126fc565b95945050505050565b6000602082840312156127a257600080fd5b5051919050565b8183526000602080850194508260005b858110156127e75781356127cc816122ac565b6001600160a01b0316875295820195908201906001016127b9565b509495945050505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561282457600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006128556040830186886127a9565b82810360208401526128688185876127f2565b979650505050505050565b8681526001600160a01b038616602082015260806040820152600061289c6080830186886127a9565b82810360608401526128af8185876127f2565b9998505050505050505050565b6003811061270c5761270c6126e6565b8581526001600160a01b03858116602083015260a08201906128f160408401876128bc565b939093166060820152608001529392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0384168152604060208201526000612787604083018486612905565b85815260006001600160a01b03808716602084015280861660408401525060806060830152612868608083018486612905565b8481526001600160a01b038416602082015260808101600284106129aa576129aa6126e6565b60408201939093526060015292915050565b8481526001600160a01b03848116602083015260808201906129e160408401866128bc565b80841660608401525095945050505050565b8481526001600160a01b038481166020830152608082019060058510612a1b57612a1b6126e6565b84604084015280841660608401525095945050505050565b60006001600160a01b03808716835280861660208401525060606040830152612a60606083018486612905565b9695505050505050565b86815260006001600160a01b038088166020840152808716604084015280861660608401525060a06080830152612aa560a083018486612905565b9897505050505050505056fea2646970667358221220cd73b65b509940334bb91e620ef353f932d88894ac4721bdf2c9427782c3ed2664736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ad5760003560e01c806377e96d21116100ee578063a71ac5f011610097578063adf43efb11610071578063adf43efb14610372578063bcf612fc14610385578063d19bf98b14610398578063dc797ce3146103ab57600080fd5b8063a71ac5f014610339578063a9ed9d161461034c578063aa9f79431461035f57600080fd5b806382887e02116100c857806382887e02146103005780639f492e7c14610313578063a2ac8d861461032657600080fd5b806377e96d21146102c757806378a4f076146102da5780637f1f1990146102ed57600080fd5b8063224468a81161015b57806339acf6951161013557806339acf6951461027b57806339f2b6511461028e578063656fe066146102a15780636a5c9358146102b457600080fd5b8063224468a8146102425780632ef754af1461025557806338cd4d091461026857600080fd5b8063173a06f91161018c578063173a06f9146102095780631a6ca6da1461021c5780631de8a0161461022f57600080fd5b8062395f11146101b25780630de54802146101c757806312d43a51146101da575b600080fd5b6101c56101c03660046122c4565b6103be565b005b6101c56101d53660046122f0565b6104d4565b6000546101ed906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6101c5610217366004612375565b6105e7565b6101c561022a3660046122f0565b610710565b6101c561023d3660046123f8565b610823565b6101c56102503660046122f0565b610952565b6101c5610263366004612457565b610a65565b6101c56102763660046122c4565b610c32565b6101c56102893660046124e8565b610d3e565b6101c561029c3660046122c4565b610e62565b6101c56102af36600461254d565b610f6e565b6101c56102c23660046122c4565b611111565b6101c56102d5366004612592565b61121d565b6101c56102e83660046125c2565b61133b565b6101c56102fb3660046125f0565b611497565b6101c561030e366004612624565b6116b5565b6101c56103213660046125c2565b6117c9565b6101c5610334366004612657565b611925565b6101c561034736600461267b565b611a22565b6101c561035a366004612657565b611b3a565b6101c561036d3660046123f8565b611c27565b6101c56103803660046125c2565b611d4b565b6101c56103933660046122f0565b611ea7565b6101c56103a6366004612592565b611fba565b6101c56103b9366004612592565b61218e565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b0316631a20325760e01b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd4802749061042f903390889087908790600401612710565b602060405180830381600087803b15801561044957600080fd5b505af115801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190612790565b604080518281526001600160a01b03871660208201529081018590529091507f170cfbd4ca14e4c07750912ad957e666499c81fdfef63021cde154c6ffaac2d7906060015b60405180910390a150505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316631a1c1b9560e21b179052600080549351633f52009d60e21b81529293909291169063fd48027490610548903390889087908790600401612710565b602060405180830381600087803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f0440d8b8371306b54b33893631962ccab8e82436d91eb4a2c481454cc2ed4781906060016104c6565b600063a7bdf45a60e01b858585856040516024016106089493929190612841565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd480274906106729033908b9087908790600401612710565b602060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190612790565b90507f4c42642dbb775b1ef06ad1492581510de04ccfb5ad078338d6ae369b56f356a08188888888886040516106ff96959493929190612873565b60405180910390a150505050505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316631b2ce7f360e11b179052600080549351633f52009d60e21b81529293909291169063fd48027490610784903390889087908790600401612710565b602060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f322efec8297181586148e7711ed39e230b706795edf152fd4e3a3a8fc009d33b906060016104c6565b604080516001600160a01b03848116602483015283811660448084019190915283518084039091018152606490920183526020820180516001600160e01b0316633f7f93af60e11b179052600080549351633f52009d60e21b81529293909291169063fd4802749061089f903390899087908790600401612710565b602060405180830381600087803b1580156108b957600080fd5b505af11580156108cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f19190612790565b604080518281526001600160a01b0380891660208301528088169282019290925290851660608201529091507f892ed68a932643ffae382937ae40947f858726f5014c80e6612255d981508090906080015b60405180910390a15050505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316634ffc800d60e11b179052600080549351633f52009d60e21b81529293909291169063fd480274906109c6903390889087908790600401612710565b602060405180830381600087803b1580156109e057600080fd5b505af11580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a189190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f0691c48365957fae1547e6922078da4127a4ec5beedd4aca7b80a5c793722556906060016104c6565b600080846002811115610a7a57610a7a6126e6565b1415610a8e5750632d3633b760e21b610b2b565b6001846002811115610aa257610aa26126e6565b1415610ab65750633cfe6c7760e11b610b2b565b6002846002811115610aca57610aca6126e6565b1415610ade575063057425d760e21b610b2b565b60405162461bcd60e51b815260206004820152600e60248201527f696e76616c696420616374696f6e00000000000000000000000000000000000060448201526064015b60405180910390fd5b604080516001600160a01b038581166024830152604480830186905283518084039091018152606490920183526020820180516001600160e01b03166001600160e01b03198616179052600080549351633f52009d60e21b81529293909291169063fd48027490610ba79033908b908790600190600401612710565b602060405180830381600087803b158015610bc157600080fd5b505af1158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190612790565b90507f68a1245119792f0c0b4396c9d85ed7e432c53279527235d14c64bc4e801d2bb081888888886040516106ff9594939291906128cc565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b0316634586f33160e01b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd48027490610ca3903390889087908790600401612710565b602060405180830381600087803b158015610cbd57600080fd5b505af1158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf59190612790565b604080518281526001600160a01b03871660208201529081018590529091507fa140c5e7d56a62eaaaa3aeb3b9d49c5fc85004d8d25920be0bce5e08a0b7ec9b906060016104c6565b6000634f1ef28660e01b848484604051602401610d5d9392919061292e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd48027490610dc79033908a9087908790600401612710565b602060405180830381600087803b158015610de157600080fd5b505af1158015610df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e199190612790565b90507f7936bef0e4e9424795215dbcddd145b5f6ccbe6d35ed9ceacc3c9cec1b1a1ed18187878787604051610e52959493929190612951565b60405180910390a1505050505050565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b0316637906491560e11b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd48027490610ed3903390889087908790600401612710565b602060405180830381600087803b158015610eed57600080fd5b505af1158015610f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f259190612790565b604080518281526001600160a01b03871660208201529081018590529091507f27cc981a956034897b297d307eaa4e907654717913a238daf3e32a5bd0e18aea906060016104c6565b600080836001811115610f8357610f836126e6565b1415610f97575063e2c1ed2560e01b611007565b6001836001811115610fab57610fab6126e6565b1415610fbf575063036145eb60e11b611007565b60405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206665652074797065000000000000000000000000000000006044820152606401610b22565b6000818360405160240161101d91815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd480274906110889033908a908790600190600401612710565b602060405180830381600087803b1580156110a257600080fd5b505af11580156110b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110da9190612790565b90507f924ed1dc9162d297ef826f4eb457b22796e62033fea2fb6f201c13661d04c64181878787604051610e529493929190612984565b60408051602480820184905282518083039091018152604490910182526020810180516001600160e01b031663f2fde38b60e01b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd48027490611182903390889087908790600401612710565b602060405180830381600087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190612790565b604080518281526001600160a01b03871660208201529081018590529091507f2e7f126e99465c6c540098e0eca13d2fc8d71908debbf31d908bee17e2866d0c906060016104c6565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663cd04611960e01b179052600080549351633f52009d60e21b81529293909291169063fd48027490611295903390899087908790600401612710565b602060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e79190612790565b604080518281526001600160a01b038089166020830152871691810191909152606081018590529091507fbbf294b7b2aadbd73c0198ccea847bbc640871eb1ad2a0b01ac080d077f088e790608001610943565b60006001836002811115611351576113516126e6565b141561136557506320b707b160e21b611389565b6002836002811115611379576113796126e6565b1415610ade5750636b2c0f5560e01b5b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd4802749061140e9033908a908790600190600401612710565b602060405180830381600087803b15801561142857600080fd5b505af115801561143c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114609190612790565b90507f9fe02e73a05d9dc9d3f3cb9423f6531a055a6083c43978dc2b64d6e505e4366581878787604051610e5294939291906129bc565b6000808360048111156114ac576114ac6126e6565b14156114c0575063588be02b60e01b6115a8565b60018360048111156114d4576114d46126e6565b14156114e857506301e5ff3360e11b6115a8565b60028360048111156114fc576114fc6126e6565b14156115105750639b05a77560e01b6115a8565b6003836004811115611524576115246126e6565b14156115385750634177ea8160e11b6115a8565b600483600481111561154c5761154c6126e6565b1415611560575063f83b0fb960e01b6115a8565b60405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206272696467652074797065000000000000000000000000006044820152606401610b22565b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd4802749061162c9033908a9087908790600401612710565b602060405180830381600087803b15801561164657600080fd5b505af115801561165a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167e9190612790565b90507f1605f3e8c96ab34dc0790b6937e2f0c59bb340db6e689a77bc500789d32314f881878787604051610e5294939291906129f3565b6040805182151560248083019190915282518083039091018152604490910182526020810180516001600160e01b0316630296cf3f60e11b179052600080549251633f52009d60e21b8152919290916001600160a01b039091169063fd4802749061172a903390889087908790600401612710565b602060405180830381600087803b15801561174457600080fd5b505af1158015611758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177c9190612790565b604080518281526001600160a01b0387166020820152851515918101919091529091507fb415e98e9740cf326dbeb0b43f0fa7d742ab13c6c2fc4e0042b6289cca074526906060016104c6565b600060018360028111156117df576117df6126e6565b14156117f357506310154bad60e01b611817565b6002836002811115611807576118076126e6565b1415610ade575063291d954960e01b5b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd4802749061189c9033908a908790600190600401612710565b602060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190612790565b90507f4336c9be2e5abfad187a39a7f7346158c644f54824688bb5a5b335f9306fb9bb81878787604051610e5294939291906129bc565b6040805160048082526024820183526020820180516001600160e01b03166325c38b9f60e01b179052600080549351633f52009d60e21b8152929390926001600160a01b039091169163fd480274916119879133918891889160019101612710565b602060405180830381600087803b1580156119a157600080fd5b505af11580156119b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d99190612790565b604080518281526001600160a01b03861660208201529192507f149a32d950b4bc0cb34725d5a842addc6f3e428807357a578301e078cc644357910160405180910390a1505050565b6000639623609d60e01b85858585604051602401611a439493929190612a33565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd48027490611aad9033908b9087908790600401612710565b602060405180830381600087803b158015611ac757600080fd5b505af1158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190612790565b90507ff6b46465ce70c6b53ccde6e33cdd45c1906ded1e8553ff64ebdadf97d3ac29518188888888886040516106ff96959493929190612a6a565b6001546001600160a01b03163314611b945760405162461bcd60e51b815260206004820152601960248201527f6f6e6c7920696e697469616c697a65722063616e20696e6974000000000000006044820152606401610b22565b6000546001600160a01b031615611bed5760405162461bcd60e51b815260206004820152601460248201527f676f76206164647220616c7265616479207365740000000000000000000000006044820152606401610b22565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b604080516001600160a01b03848116602483015283811660448084019190915283518084039091018152606490920183526020820180516001600160e01b031663266a23b160e21b179052600080549351633f52009d60e21b81529293909291169063fd48027490611ca3903390899087908790600401612710565b602060405180830381600087803b158015611cbd57600080fd5b505af1158015611cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cf59190612790565b604080518281526001600160a01b0380891660208301528088169282019290925290851660608201529091507fc1dead51ac2e9fa286784eeefebacaf915332934c6d6fd290ec2c8de51c7863290608001610943565b60006001836002811115611d6157611d616126e6565b1415611d7557506303c4a25d60e41b611d99565b6002836002811115611d8957611d896126e6565b1415610ade5750631dd9b59160e31b5b6040516001600160a01b0383166024820152600090829060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600080549251633f52009d60e21b8152919350916001600160a01b03169063fd48027490611e1e9033908a908790600190600401612710565b602060405180830381600087803b158015611e3857600080fd5b505af1158015611e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e709190612790565b90507f725ab9c9498b34fa1336448b0dc8dfb419461e03707ace510d44e8bb63d8485181878787604051610e5294939291906129bc565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166328a8478560e11b179052600080549351633f52009d60e21b81529293909291169063fd48027490611f1b903390889087908790600401612710565b602060405180830381600087803b158015611f3557600080fd5b505af1158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d9190612790565b604080518281526001600160a01b0380881660208301528616918101919091529091507f8aaee1ae0ee9b8019d672115e172cd8fd03686f0f117ce65aa0ed224ca6d12b3906060016104c6565b60606001600160a01b0383166120385750604080518082018252601281527f647261696e546f6b656e2875696e74323536000000000000000000000000000060209182015281516024808201859052835180830390910181526044909101909252810180516001600160e01b031663a76cd1bb60e01b1790526120b1565b50604080518082018252601a81527f647261696e546f6b656e28616464726573732c75696e7432353600000000000060209182015281516001600160a01b03851660248201526044808201859052835180830390910181526064909101909252810180516001600160e01b0316634dd256db60e11b1790525b60008054604051633f52009d60e21b81526001600160a01b039091169063fd480274906120e8903390899087908790600401612710565b602060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213a9190612790565b604080518281526001600160a01b038089166020830152871691810191909152606081018590529091507f07315b20d3a4862680a34cedf6a8b62bd45bdf98fa602f664417d8a84d47c1bc90608001610943565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03166326717b8d60e11b179052600080549351633f52009d60e21b81529293909291169063fd48027490612206903390899087908790600401612710565b602060405180830381600087803b15801561222057600080fd5b505af1158015612234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122589190612790565b604080518281526001600160a01b038089166020830152871691810191909152606081018590529091507fdf93094bf7ed4f11758b798f8463ab250ae3db9edc392c26b92443f3cf73100490608001610943565b6001600160a01b03811681146122c157600080fd5b50565b600080604083850312156122d757600080fd5b82356122e2816122ac565b946020939093013593505050565b6000806040838503121561230357600080fd5b823561230e816122ac565b9150602083013561231e816122ac565b809150509250929050565b60008083601f84011261233b57600080fd5b50813567ffffffffffffffff81111561235357600080fd5b6020830191508360208260051b850101111561236e57600080fd5b9250929050565b60008060008060006060868803121561238d57600080fd5b8535612398816122ac565b9450602086013567ffffffffffffffff808211156123b557600080fd5b6123c189838a01612329565b909650945060408801359150808211156123da57600080fd5b506123e788828901612329565b969995985093965092949392505050565b60008060006060848603121561240d57600080fd5b8335612418816122ac565b92506020840135612428816122ac565b91506040840135612438816122ac565b809150509250925092565b80356003811061245257600080fd5b919050565b6000806000806080858703121561246d57600080fd5b8435612478816122ac565b935061248660208601612443565b92506040850135612496816122ac565b9396929550929360600135925050565b60008083601f8401126124b857600080fd5b50813567ffffffffffffffff8111156124d057600080fd5b60208301915083602082850101111561236e57600080fd5b600080600080606085870312156124fe57600080fd5b8435612509816122ac565b93506020850135612519816122ac565b9250604085013567ffffffffffffffff81111561253557600080fd5b612541878288016124a6565b95989497509550505050565b60008060006060848603121561256257600080fd5b833561256d816122ac565b925060208401356002811061258157600080fd5b929592945050506040919091013590565b6000806000606084860312156125a757600080fd5b83356125b2816122ac565b92506020840135612581816122ac565b6000806000606084860312156125d757600080fd5b83356125e2816122ac565b925061242860208501612443565b60008060006060848603121561260557600080fd5b8335612610816122ac565b925060208401356005811061242857600080fd5b6000806040838503121561263757600080fd5b8235612642816122ac565b91506020830135801515811461231e57600080fd5b60006020828403121561266957600080fd5b8135612674816122ac565b9392505050565b60008060008060006080868803121561269357600080fd5b853561269e816122ac565b945060208601356126ae816122ac565b935060408601356126be816122ac565b9250606086013567ffffffffffffffff8111156126da57600080fd5b6123e7888289016124a6565b634e487b7160e01b600052602160045260246000fd5b6006811061270c5761270c6126e6565b9052565b60006001600160a01b038087168352602081871681850152608060408501528551915081608085015260005b828110156127585786810182015185820160a00152810161273c565b8281111561276a57600060a084870101525b5050601f01601f1916820160a001905061278760608301846126fc565b95945050505050565b6000602082840312156127a257600080fd5b5051919050565b8183526000602080850194508260005b858110156127e75781356127cc816122ac565b6001600160a01b0316875295820195908201906001016127b9565b509495945050505050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561282457600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006128556040830186886127a9565b82810360208401526128688185876127f2565b979650505050505050565b8681526001600160a01b038616602082015260806040820152600061289c6080830186886127a9565b82810360608401526128af8185876127f2565b9998505050505050505050565b6003811061270c5761270c6126e6565b8581526001600160a01b03858116602083015260a08201906128f160408401876128bc565b939093166060820152608001529392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0384168152604060208201526000612787604083018486612905565b85815260006001600160a01b03808716602084015280861660408401525060806060830152612868608083018486612905565b8481526001600160a01b038416602082015260808101600284106129aa576129aa6126e6565b60408201939093526060015292915050565b8481526001600160a01b03848116602083015260808201906129e160408401866128bc565b80841660608401525095945050505050565b8481526001600160a01b038481166020830152608082019060058510612a1b57612a1b6126e6565b84604084015280841660608401525095945050505050565b60006001600160a01b03808716835280861660208401525060606040830152612a60606083018486612905565b9695505050505050565b86815260006001600160a01b038088166020840152808716604084015280861660608401525060a06080830152612aa560a083018486612905565b9897505050505050505056fea2646970667358221220cd73b65b509940334bb91e620ef353f932d88894ac4721bdf2c9427782c3ed2664736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6255,
        "contract": "contracts/governed-owner/GovernedOwnerProxy.sol:GovernedOwnerProxy",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(SimpleGovernance)5131"
      },
      {
        "astId": 6257,
        "contract": "contracts/governed-owner/GovernedOwnerProxy.sol:GovernedOwnerProxy",
        "label": "initializer",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(SimpleGovernance)5131": {
        "encoding": "inplace",
        "label": "contract SimpleGovernance",
        "numberOfBytes": "20"
      }
    }
  }
}